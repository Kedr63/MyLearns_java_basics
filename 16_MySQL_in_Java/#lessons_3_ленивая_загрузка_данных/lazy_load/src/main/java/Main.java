import jakarta.persistence.criteria.CriteriaBuilder;
import jakarta.persistence.criteria.CriteriaQuery;
import jakarta.persistence.criteria.Root;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.boot.Metadata;
import org.hibernate.boot.MetadataSources;
import org.hibernate.boot.registry.StandardServiceRegistry;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;

import java.util.List;


public class Main {
    /* üìç –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö */

    public static void main(String[] args) {
        StandardServiceRegistry registry = new StandardServiceRegistryBuilder()
                .configure("hibernate.cfg.xml").build();
        Metadata metadata = new MetadataSources(registry).getMetadataBuilder().build();
        SessionFactory sessionFactory = metadata.getSessionFactoryBuilder().build();


        Session session = sessionFactory.openSession();



        CriteriaBuilder builder = session.getCriteriaBuilder();
        CriteriaQuery<Course> query = builder.createQuery(Course.class);
        Root<Course> root = query.from(Course.class);
        query.select(root);
        List<Course> courseList = session.createQuery(query).getResultList();

//        for (Course course : courseList){
//            System.out.println(course.getName());
//        }
        /* –ö—Ä–æ–º–µ –∫—É—Ä—Å–æ–≤ Hibernate —Ç–∞–∫–∂–µ –±—É–¥–µ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –≤—Å–µ—Ö —É—á–∏—Ç–µ–ª–µ–π: –ø–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –∫—É—Ä—Å—ã, –∞ –ø–æ—Ç–æ–º –¥–ª—è
         * –∫–∞–∂–¥–æ–≥–æ –∏–∑ –∫—É—Ä—Å–æ–≤ –ø–æ–ª—É—á–∞–µ—Ç —É—á–∏—Ç–µ–ª—è. –ü–æ—á–µ–º—É —Ç–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç? –ü–æ—Ç–æ–º—É —á—Ç–æ —É –∫—É—Ä—Å–∞ –µ—Å—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ /private Teacher teacher;/
         * –ù–æ —É—á–∏—Ç–µ–ª—å –Ω–∞–º –∑–¥–µ—Å—å –¥–æ–ø—É—Å—Ç–∏–º –Ω–µ –Ω—É–∂–µ–Ω, –∑–¥–µ—Å—å –º—ã —Ö–æ—Ç–∏–º —Ä–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–æ–≤, –∏ —Ç–∞–∫ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–ª—è—Ç—å—Å—è –º–Ω–æ–≥–æ —Ä–µ—Å—É—Ä—Å–æ–≤,
         * –ø–æ—Å–∫–æ–ª—å–∫—É –≤ –ø–∞–º—è—Ç—å –∏–∑ –ë–î –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –º–Ω–æ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
         * –ü–æ—ç—Ç–æ–º—É –µ—Å—Ç—å –¥–≤–∞ –º–µ—Ö–∞–Ω–∏–∑–º–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã:
         * üìç Eager (–¥–µ–π—Å—Ç–≤—É–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å—Ä–∞–∑—É)
         * üìç Lazy
         * –ò —Ç–µ–ø–µ—Ä—å —É —Å–≤–æ–π—Å—Ç–≤–∞ /private Teacher teacher;/ –¥–æ–±–∞–≤–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä /fetch = FetchType.LAZY/. –ò —Ç–µ–ø–µ—Ä—å –∑–∞–ø—Ä–æ—Å–∞ —É—á–∏—Ç–µ–ª–µ–π –Ω–µ –±—É–¥–µ—Ç
         * */

        /* –ù–æ –º–æ–∂–µ–º –∏ –≤–º–µ—Å—Ç–µ —Å –∫—É—Ä—Å–∞–º–∏ —Ä–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å —É—á–∏—Ç–µ–ª–µ–π (–∑–¥–µ—Å—å –∑–∞–ø—Ä–æ—Å —Å–æ–≤–µ—Ä—à–∞–µ—Ç—Å—è –ø–æ –º–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)*/
       try {
           int i = 1;
           for (Course course : courseList){
               System.out.println(i + ".  " + course.getName() + " - " + course.getTeacher().getName());
               i++;
           }
       } catch (Exception e){
           System.out.println(e.getMessage());
       }



        sessionFactory.close(); // –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã—Ç—å –≤ –∫–æ–Ω—Ü–µ —Å–µ—Å—Å–∏—é


    }
}
