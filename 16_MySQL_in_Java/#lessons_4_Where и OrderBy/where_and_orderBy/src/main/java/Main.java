import jakarta.persistence.criteria.CriteriaBuilder;
import jakarta.persistence.criteria.CriteriaQuery;
import jakarta.persistence.criteria.Root;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.boot.Metadata;
import org.hibernate.boot.MetadataSources;
import org.hibernate.boot.registry.StandardServiceRegistry;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;

import java.util.List;


public class Main {
    /* üìç Where –∏ OrderBy */
   /* */


    public static void main(String[] args) {
        StandardServiceRegistry registry = new StandardServiceRegistryBuilder()
                .configure("hibernate.cfg.xml").build();
        Metadata metadata = new MetadataSources(registry).getMetadataBuilder().build();
        SessionFactory sessionFactory = metadata.getSessionFactoryBuilder().build();

        Session session = sessionFactory.openSession();

        CriteriaBuilder builder = session.getCriteriaBuilder();
        CriteriaQuery<Course> query = builder.createQuery(Course.class);
        Root<Course> root = query.from(Course.class);

        /* –ü–æ–ª—É—á–∏–º 5 —Å–∞–º—ã—Ö –≤—ã—Å–æ–∫–æ–æ–ø–ª–∞—á–∏–≤–∞–µ–º—ã—Ö –∫—É—Ä—Å–æ–≤ –¥–æ—Ä–æ–∂–µ 100_000 —Ä—É–± –∏ —É–ø–æ—Ä—è–¥–æ—á–∏–º –æ—Ç —Å–∞–º–æ–≥–æ –¥–æ—Ä–æ–≥–æ –¥–æ —Å–∞–º–æ–≥–æ –¥–µ—à–µ–≤–æ–≥–æ */
        query.select(root).where(builder.greaterThan(root.get("price"), 100000)).orderBy(builder.desc(root.get("price")));
        /* –ò –≤–æ–∑—å–º–µ–º –ø—è—Ç—å —Å–∞–º—ã—Ö –ø–µ—Ä–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤  */
        List<Course> courseList = session.createQuery(query).setMaxResults(5).getResultList();


        for (Course course : courseList){
            System.out.println(course.getName() + " - " + course.getPrice());
        }

        sessionFactory.close(); // –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã—Ç—å –≤ –∫–æ–Ω—Ü–µ —Å–µ—Å—Å–∏—é
    }
}
