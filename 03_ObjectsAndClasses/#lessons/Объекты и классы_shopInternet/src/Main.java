public class Main {

    /*Методы, классы и объекты*/

    // Методы- это фрагмент (блок) кода который выполняет определенные действия
    // Имя метода: должно отражать суть того, что этот метод делает
    // в () могут находиться параметры: это типы и имена ∼ , которые можно передавать в метод
    // и которые в нем будут использоваться

    // Создадим интернет магазин:
    // 1. Создадим метод /add(параметры)/
    // 2. Создадим строку куда будем складывать товары
    // 3. Корзины еще можно очищать - создадим метод /clear()/
    // 4. И создадим метод для вывода содержимого корзины в консоль /print()/
    // 5. Добавим ~ , которая будет содержать общую стоимость
    // Если использовали ключевое слово /return/ при выполнении какого-то условия,
    // т.е. в операторе /if/, то после него оператор /else/ писать не нужно

    // Классы и объекты нужны для того чтобы отражать в программом коде сущности которые
    // существуют в предметной области, с которой мы работаем, например корзины интернет магазина
    // Класс - это некая абстракция, которая описывает то какими могут быть объекты, их свойства
    // и способы взаимодействия с ними. Например, у всех корзин одинаковые свойства (поля) и
    // одинаковое поведение.
    // Про /static/: нужно запомнить, что для того чтобы переменную или метод можно было использовать
    // в классе на основе которого создаются разные объекты (разные корзины), эти переменные и методы
    // не должны быть обозначены как /static/.
    // Класс -это шаблон по которому создаются объекты. По сути класс -это набор переменных и методов
    // Классы пишутся с большой буквы и если из несколько слов то в стиле /CamelStyle/
    // Теперь создадим корзины конкретных пользователей
    // оператор /new/ обозначает что мы создаем объект класса Basket
    // символ /=/ означает что мы этот объект условно кладем в эту переменную /vasyaBasket/
    // и дальше мы этой переменной можем пользоваться (вызывать методы)

    // Методы и классы должны быть созданы таким образом, чтобы их можно было вызывать и использовать
    // многократно, т.е. они должны быть переиспользуемыми

    // 6. А теперь представим что интернет магазин, корзину для которого создавали
    // находится за границей и там есть лимит по стоимости товаров превышение которого приведет к тому
    // что покупателю нужно будет платить высокую таможенную пошлину  --> учтем этот лимит в нашем
    // классе. Создадим пременную /private int limit/, она по сути сразу относится ко всей корзине и
    // логично было бы ее задавать сразу при создании корзины, так вот конструкторы это специальные
    // фрагменты кода, которые предназначены для инициализации каких-то данных при создании объектов.

    // 7. Создадим конструктор который инициализирует нашу корзину из заранее сохраненного списка товаров
    // и общей цены (здесь будет два параметра)

    public static void main(String[] args) {
        Basket vasyaBasket = new Basket();
        vasyaBasket.add("Молоко", 80);
        vasyaBasket.add("Хлеб", 50);

        Basket petyaBasket = new Basket(500);
        petyaBasket.add("Лопата", 120);
        petyaBasket.add("Бочка", 2900);

        Basket mashaBasket=new Basket("Стол", 5000);

        vasyaBasket.print("Корзина Васи: ");
        petyaBasket.print("Корзина Пети: ");
        mashaBasket.print("Корзина Маши: ");
    }
}
