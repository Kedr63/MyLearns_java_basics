

import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;

public class Main {

private static int newWidth = 300;

// –≠—Ç–æ—Ç –∫–æ–¥ –∫–æ–ø–∏—Ä—É–µ—Ç —Ñ–æ—Ç–æ –∏–∑ –æ–¥–Ω–æ–π –ø–∞–ø–∫–∏ –≤ –¥—Ä—É–≥—É—é –≤ –æ–¥–Ω–æ–º –ø–æ—Ç–æ–∫–µ
  public static void main(String[] args) {

    String srcFolder = "/home/kedr/–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª/java_for_course/src";
    String dstFolder = "/home/kedr/–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª/java_for_course/dst";

   /* File srcDir = new File(srcFolder);

    long star = System.currentTimeMillis();

    File[] files = srcDir.listFiles();

    try {
      for (File file : files){
        BufferedImage image = ImageIO.read(file);
        if (image == null){
          continue;
        }
        int newHeight = (int) Math.round(image.getHeight() / (image.getWidth() / (double)newWidth));

        BufferedImage newImage = new BufferedImage(newWidth, newHeight, BufferedImage.TYPE_INT_RGB);

        int widthStep = image.getWidth() / newWidth;
        int heightStep = image.getHeight() / newHeight;

        for (int x = 0; x < newWidth; x++){
          for (int y = 0; y < newHeight; y++){
            int rgb = image.getRGB(x * widthStep, y * heightStep);
            newImage.setRGB(x, y, rgb);
          }
        }
        File newFile = new File(dstFolder + "/" +file.getName());
        ImageIO.write(newImage, "jpg", newFile);
      }
    } catch (Exception ex){
      ex.printStackTrace();
    }
    System.out.println("Duration: " + (System.currentTimeMillis() - star));*/

    // üìç –¢–µ–ø–µ—Ä—å —Ä–∞–∑–¥–µ–ª–∏–º –Ω–∞ –¥–≤–∞ –ø–æ—Ç–æ–∫–∞
    // –ß—Ç–æ–± —Å–æ–∑–¥–∞—Ç—å –ø–æ—Ç–æ–∫ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å –∫–ª–∞—Å—Å, –Ω–∞–ø—Ä–∏–º–µ—Ä ImageResizer –∏ –æ—Ç–Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –µ–≥–æ
    // –æ—Ç –∫–ª–∞—Å—Å–∞ Tread –∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤ –Ω–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ run() –∏ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ –Ω–µ–º —Ç–æ —á—Ç–æ –¥–æ–ª–∂–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è
    // –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ, –≤ —ç—Ç–æ–º –∫–ª–∞—Å—Å–µ —Ç–∞–∫–∂–µ –¥–æ–±–∞–≤–∏–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    File srcDir = new File(srcFolder);

    long star = System.currentTimeMillis();

    File[] files = srcDir.listFiles();

    int middle = files.length / 2;

    File[] files1 = new File[middle];
    System.arraycopy(files, 0, files1, 0, files1.length);

    // –ò —Å–æ–∑–¥–∞–¥–∏–º 1 –ø–æ—Ç–æ–∫
    ImageResizer imageResizer1 = new ImageResizer(files1, newWidth, dstFolder, star);
    imageResizer1.start();


    File[] files2 = new File[files.length - middle];
    System.arraycopy(files, middle, files2, 0, files2.length);

    // –ò —Å–æ–∑–¥–∞–¥–∏–º 2 –ø–æ—Ç–æ–∫
    ImageResizer imageResizer2 = new ImageResizer(files2, newWidth, dstFolder, star);
    imageResizer2.start();
  }
}
