import java.util.Arrays;
import java.util.List;
import java.util.stream.Stream;

public class Main {
    public static final String STAFF_TXT = "data/staff.txt";

    // ‚ù§Ô∏è Stream API
    //____________________

    // Stream - —ç—Ç–æ –æ–±—ä–µ–∫—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Stream, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏
    // –∏ —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ –º–æ–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞—à–∏—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π, –º–∞—Å—Å–∏–≤–æ–≤ –≤
    // —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º —Å—Ç–∏–ª–µ –Ω–µ —Å–æ–∑–¥–∞–≤–∞—è —Ü–∏–∫–ª—ã.

    public static void main(String[] args) {
        List<Employee> staff = Employee.loadStaffFromFile(STAFF_TXT);

        // –û–¥–∏–Ω –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–ª—É—á–µ–Ω–∏—è /Stream/ ->  –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥ /stream/ —É –∫–æ–ª–ª–µ–∫—Ü–∏–∏
        // –∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –º—ã —Ö–æ—Ç–∏–º –Ω–∞–ø–µ—á–∞—Ç–∞—Ç—å –Ω–µ –≤—Å–µ—Ö –Ω–∞—à–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –∞ —Ç–æ–ª—å–∫–æ —Ç–µ—Ö —É –∫–æ–≥–æ
        // –∑/–ø > —á–µ–º 100_000 —Ä—É–± ‚¨á

        Stream<Employee> stream = staff.stream();
        stream.filter(employee -> employee.getSalary() >= 100000).forEach(System.out::println);

        // –∑–¥–µ—Å—å /filter/ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç /stream/, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã —É –∫–æ—Ç–æ—Ä—ã—Ö
        // –∑/–ø –±–æ–ª—å—à–µ 100_000,   –∏ –¥–∞–ª—å—à–µ  ‚ûî –º—ã –≤—ã–∑—ã–≤–∞–µ–º /forEach/ –∏ –ø–µ—á–∞—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —ç—Ç–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        /*  –∫–æ–Ω—Å–æ–ª—å:
        –ê–ª–µ–∫—Å–µ–π –ò–≤–ª–∏–µ–≤ - 125000 - 11.11.2018
        –ê–Ω–Ω–∞ –°–µ—Ç—è–µ–≤–∞ - 140000 - 10.05.2012
        –î–º–∏—Ç—Ä–∏–π –ö–æ—á–µ—Ä–≥–∏–Ω - 140000 - 31.01.2017
        –°—Ç–µ–ø–∞–Ω –ë–æ–≥–¥–∞–Ω–æ–≤ - 140000 - 17.04.2016
        –°–∞–≤–µ–ª–∏–π –§—ë–¥–æ—Ä–æ–≤ - 115000 - 07.05.2019
        –ï–≤–≥–µ–Ω–∏–π –ê–ª—Ñ—ë—Ä–æ–≤ - 105000 - 12.08.2016  */

        // ‚¨Ü —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–º–µ—Ä –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç stream-—ã
        // –∏ –º–æ–∂–Ω–æ –±—ã–ª–æ —ç—Ç—É –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é (—Å–º. –≤—ã—à–µ) –∑–∞–ø–∏—Å–∞—Ç—å –∫–æ—Ä–æ—á–µ:
        staff.stream().filter(e -> e.getSalary() >= 100_000).forEach(System.out::println);

        // –¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π—Ç–µ —á—É—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ –æ —Ç–æ–º, –∫–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ /Stream/.
        // –ú–æ–∂–Ω–æ –≤–∑—è—Ç—å –∏ –ø–æ–ª—É—á–∏—Ç—å Stream –ø—Ä—è–º–æ –∏–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä, –º—ã —Ö–æ—Ç–∏–º –ø–æ–ª—É—á–∏—Ç—å
        // —Å—Ç—Ä–∏–º –∏–∑ —á–∏—Å–µ–ª (–≤—ã–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ /of/ –∏ –ø–µ—Ä–µ–¥–∞–µ–º —Å—é–¥–∞ —á–∏—Å–ª–∞)
        Stream<Integer> numbers = Stream.of(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);

        // —Ç–∞–∫ –∂–µ –∫–∞–∫ —Ä–∞–Ω—å—à–µ –¥–µ–ª–∞–ª–∏ –º–∞—Å—Å–∏–≤—ã —á–µ—Ä–µ–∑ [], —Ç–∞–∫–∂–µ –º–æ–∂–Ω–æ –∏ –ø–æ–ª—É—á–∞—Ç—å —á–∏—Å–ª–∞,
        // –∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–µ–º –≤–∑—è—Ç—å –∏ —Ä–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ —á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞:
        numbers.filter(number -> number % 2 == 0).forEach(System.out::println);

        // –ï—â—ë –æ–¥–∏–Ω —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è stream-–∞, —ç—Ç–æ –ø–æ–ª—É—á–µ–Ω–∏–µ –µ–≥–æ –∏–∑ –º–∞—Å—Å–∏–≤–∞
        Integer[] numbers1 = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        // –º—ã –º–æ–∂–µ–º –ø–æ–ª—É—á–∏—Ç—å —ç—Ç–æ—Ç —Å—Ç—Ä–∏–º —É —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–µ—Ç–æ–¥–∞ /stream/ –∫–ª–∞—Å—Å–∞ Array ‚¨á
        Arrays.stream(numbers1).filter(integer -> integer < 5).forEach(System.out::println);

        // –¢–∞–∫–∂–µ –≤—Å—é –ª–æ–≥–∏–∫—É –º–µ—Ç–æ–¥–∞ /loadStaffFromFile/ –∫–ª–∞—Å—Å–∞ /Employee/ –ø–æ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
        // –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ–∫ –º–æ–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Å –ø–æ–º–æ—â—å—é Stream API, –ø–æ—Ç–æ–º—É —á—Ç–æ —É –∫–ª–∞—Å—Å–∞ /Files/
        // –µ—Å—Ç—å –º–µ—Ç–æ–¥ /lines/, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Stream<String>.

        // –≠—Ç–æ –±—ã–ª–∏ —Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º—ã–µ –∫–æ–Ω–µ—á–Ω—ã–µ stream-—ã, –∞ –±—ã–≤–∞—é—Ç –µ—â–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ stream-—ã
        Stream.iterate(1, n -> n + 1).forEach(System.out::println);
        // –≤–æ—Ç —Ç–∞–∫–æ–π –º–µ—Ç–æ–¥ /iterate/ —Å–æ–∑–¥–∞–µ—Ç –±–µ—Å—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç—å. –í –∫–æ–Ω—Å–æ–ª—å –±—É–¥—É—Ç –≤—ã–≤–æ–¥–∏—Ç—Å—è (–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è)
        // —É–≤–µ–ª–∏—á–∏–≤–∞—é—â–∏–µ—Å—è —á–∏—Å–ª–∞ –¥–æ –±–µ—Å—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏.

        // –ï—Å—Ç—å –µ—â–µ –æ–¥–∏–Ω –º–µ—Ç–æ–¥, —á—Ç–æ–± —Å–æ–∑–¥–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Å—Ç—Ä–∏–º - –º–µ—Ç–æ–¥ /generate/, –≤ –Ω–µ–º
        // –º—ã –∑–∞–¥–∞–µ–º –ª—è–º–±–¥—É, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å —ç—Ç–æ—Ç —Å—Ç—Ä–∏–º
        Stream.generate(() -> "aaa").forEach(System.out::println);

        // –ï—â–µ –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Å—Ç—Ä–∏–º –∏–∑ —Å—Ç—Ä–∏–º-char(–æ–≤)
        "fdgfhfjgkg".chars();

        // ‚ù§Ô∏è –í–µ–±–∏–Ω–∞—Ä –ø–æ —Å—Ç—Ä–∏–º —Å –ö. –®–∏–±–∫–æ–≤—ã–º  https://www.youtube.com/watch?v=aLIAQiVZsTU

        // ‚ù§Ô∏è –ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ Java 8 Stream API –≤ –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ö –∏ –ø—Ä–∏–º–µ—Ä–∞—Ö (–µ—Å—Ç—å –ø—Ä–∏–º–µ—Ä—ã)
        // https://annimon.com/article/2778

        // ‚ùóÔ∏è –®–ø–∞—Ä–≥–∞–ª–∫–∞ –ø–æ —Å—Ç—Ä–∏–º  https://habr.com/ru/company/luxoft/blog/270383/

        // üìå –†–µ—Ü–µ–ø—Ç—ã –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è Stream API –≤—ã–∑–æ–≤–æ–≤:
        // Java Stream API. –ö–æ–ø–∏–ª–∫–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤
        // https://skillbox.ru/media/base/java-stream-api-kopilka-retseptov/

        // groupingBy() - –≥—Ä—É–ø–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ StreamAPI‚ùóÔ∏è
        // https://habr.com/ru/post/348536/

        // collect() - –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–π –∏–∑ Stream‚ùóÔ∏è
        // https://metanit.com/java/tutorial/10.6.php


    }
}