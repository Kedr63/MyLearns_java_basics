package Stream_–ó–∞—É—Ä_—Ä–∞–∑–¥–µ–ª7_Streams_—á–µ—Ä–Ω—ã–π–ü–æ—è—Å;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class Test3_forEach {
    public static void main(String[] args) {
        // üìå –ú–µ—Ç–æ–¥ /forEach/ (t)  ______________________________________________________

        // –≠—Ç–æ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–µ —Ç–æ—Ç –º–µ—Ç–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –º—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –Ω–∞–ø—Ä—è–º—É—é –≤—ã–∑–≤–∞–≤ –µ–≥–æ –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏.
        // –≠—Ç–æ—Ç forEach –º—ã –±—É–¥–µ–º –≤—ã–∑—ã–≤–∞—Ç—å –Ω–∞ —Å—Ç—Ä–∏–º–µ.
        // forEach –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç void, —Ç/–µ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç, —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –ø–æ—Å–ª–µ –Ω–µ–≥–æ –Ω–µ–ª—å–∑—è —Å–æ–∑–¥–∞—Ç—å,
        // –Ω–∞–ø—Ä–∏–º–µ—Ä, –ª–∏—Å—Ç —Å –ø–æ–º–æ—â—å—é /collect/. –ú—ã –ª–∏—Å—Ç —Å –ø–æ–º–æ—â—å—é collect —Å–æ–∑–¥–∞–≤–∞–ª–∏ –∫–æ–≥–¥–∞ —É –Ω–∞—Å –±—ã–ª —Å—Ç—Ä–∏–º
        // –Ω–∞ —Ä—É–∫–∞—Ö, —Å—Ç—Ä–∏–º –ø—Ä–µ–≤—Ä–∞—â–∞–ª–∏ –≤ –ª–∏—Å—Ç, –∞ –∑–¥–µ—Å—å void –≤ –ª–∏—Å—Ç –º—ã –∫–æ–Ω–µ—á–Ω–æ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –Ω–µ –º–æ–∂–µ–º.
        // –ú–µ—Ç–æ–¥ /forEach/ –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å—Å—è –ø–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—ã–≤–æ–¥–∏—Ç—å –Ω–∞ —ç–∫—Ä–∞–Ω
        // —ç—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç—ã.
        // –ü—Ä–∏–º–µ—Ä: ‚¨á

        int[] array = {5, 1, 9, 3, 1};
        /*   Arrays.stream(array)
              .forEach(el -> {
                  el *= 2;
                  System.out.println(el);
              });    */
        // –∫–æ–Ω—Å–æ–ª—å: 10 2 18 6 2

        //–º–æ–∂–Ω–æ –±—ã–ª–æ –∏ —Ç–∞–∫
        Arrays.stream(array)
              .forEach(el -> System.out.println(el));
        // –ò –ø–æ—Å–º–æ—Ç—Ä–∏–º –∫–∞–∫ –º–æ–∂–Ω–æ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –≤–æ—Ç —ç—Ç–æ /el -> System.out.println(el)/ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ ‚ûî
        // –í–æ–æ–±—â–µ forEach —á—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç? -> —Å –∫–∞–∂–¥—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º —Å–¥–µ–ª–∞–π —Ç–æ, —á—Ç–æ
        // –∑–¥–µ—Å—å –Ω–∞–ø–∏—Å–∞–Ω–æ ‚ûî /el -> System.out.println(el)/ ‚ûî
        // ‚ûî –ø–µ—Ä–≤—ã–π el  ‚ûî  –≤—ã–≤–µ–¥–∏ –Ω–∞ —ç–∫—Ä–∞–Ω
        // ‚ûî –≤—Ç–æ—Ä–æ–π el  ‚ûî  –≤—ã–≤–µ–¥–∏ –Ω–∞ —ç–∫—Ä–∞–Ω
        // –∏ —Ç.–¥.
        // –ú—ã –º–æ–∂–µ–º –≤–æ—Ç —ç—Ç–æ –õ–í /el -> System.out.println(el)/ –µ—â–µ —É–ø—Ä–æ—Å—Ç–∏—Ç—å
        Arrays.stream(array)
              .forEach(System.out::println);       // –ß—Ç–æ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –∑–¥–µ—Å—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç?
        // –í–æ—Ç —ç—Ç–æ /System.out::println/ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥ reference, —Ç/–µ –º—ã –¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞
        // –Ω–∞—à –º–µ—Ç–æ–¥ /println/   ‚ûî –ö–∞–∫–∞—è —Å—Å—ã–ª–∫–∞? - –º—ã –≥–æ–≤–æ—Ä–∏–º —á—Ç–æ —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è
        // –≤ /System.out/-–µ.  –ò JAVA –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É–º–Ω–∞, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å —á—Ç–æ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫ println() –º—ã
        // –¥–æ–ª–∂–Ω—ã –≤—Å—Ç–∞–≤–∏—Ç—å –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –Ω–∞—à–µ–≥–æ —Å—Ç—Ä–∏–º–∞. –û–Ω–∞ –∏—â–µ—Ç /println/ –≤–æ—Ç –∑–¥–µ—Å—å ‚Üí /System.out/
        // –∏ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫ println() –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏ –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω.
        // –ó–¥–µ—Å—å –¥–æ :: —É–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞—Å—Å, –ø–æ—Å–ª–µ :: –º–µ—Ç–æ–¥.

        // –ü—Ä–∏–≤–µ–¥–µ–º –±–æ–ª–µ–µ –ª–µ–≥–∫–∏–π –ø—Ä–∏–º–µ—Ä: ‚¨á —Å–æ–∑–¥–∞–¥–∏–º –∫–ª–∞—Å—Å Utils
        // –ò —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ–º –Ω–∞–ø–∏—Å–∞—Ç—å
        Arrays.stream(array)
              .forEach(Utils::myMethod);    // –ß—Ç–æ —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç?
        // –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç: —á—Ç–æ —è –≥–æ–≤–æ—Ä—é ‚Üí –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –ø–æ—Ç–æ–∫–∞ –ø–æ–º–µ—Å—Ç–∏ –≤ –º–µ—Ç–æ–¥ /myMethod(–≤ –∫–∞—á–µ—Å—Ç–≤–µ
        // –ø–∞—Ä–∞–º–µ—Ç—Ä–∞)/, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–ª–∞—Å—Å–µ Utils. JAVA –ø–æ–Ω–∏–º–∞–µ—Ç: –≤ –∫–ª–∞—Å—Å–µ Utils –µ—Å—Ç—å /myMethod/,
        // –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –æ–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç (int a), –∞ –Ω–∞—à –ø–æ—Ç–æ–∫ —Å–æ–¥–µ—Ä–∂–∏—Ç int-—ã, –ø–æ—ç—Ç–æ–º—É –º—ã –º–æ–∂–µ–º
        // –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä /myMethod/-–∞ –Ω–∞—à–∏ —ç–ª–µ–º–µ–Ω—Ç—ã.
        /*–∫–æ–Ω—Å–æ–ª—å:
        Element = 10
        Element = 6
        Element = 14
        Element = 8
        Element = 6    */
        //‚ù§Ô∏è –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ –æ—Ç –ó–∞—É—Ä–∞: —è –±–æ–ª—å—à–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –ø–∏—Å–∞—Ç—å –õ–í, —á–µ–º –Ω–∞ —Å—Ç–æ–ª—å–∫–æ —Å–æ–∫—Ä–∞—â–∞—Ç—å –∫–æ–¥,
        // —ç—Ç–æ –¥–ª—è –º–µ–Ω—è —É–∂–µ –Ω–µ –Ω–∞—Å—Ç–æ–ª—å–∫–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ. –í—Å–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ª–∏—á–Ω—ã—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π ‚ù§Ô∏è

        // üìç–ï—â–µ –æ–¥–∏–Ω –º–æ–º–µ–Ω—Ç —Ö–æ—Ç–µ–ª —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å:  –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ç—Ä–∏–º –∏–∑ –≥–æ—Ç–æ–≤–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏
        // –∏–ª–∏ –≥–æ—Ç–æ–≤–æ–≥–æ –º–∞—Å—Å–∏–≤–∞. –ú—ã –º–æ–∂–µ–º —Å–æ–∑–¥–∞—Ç—å –µ–≥–æ —Å –Ω—É–ª—è (–ø–æ–≤—Ç–æ—Ä–∏–º –∫–æ–¥ —Å Test2)
        Student st1 = new Student("Ivan", 'm', 22, 3, 8.3);
        Student st2 = new Student("Nikolay", 'm', 28, 2, 6.4);
        Student st3 = new Student("Elena", 'f', 19, 1, 8.9);
        Student st4 = new Student("Petr", 'm', 35, 4, 7);
        Student st5 = new Student("Maria", 'f', 23, 3, 9.1);
        List<Student> students = new ArrayList<>();
        students.add(st1);
        students.add(st2);
        students.add(st3);
        students.add(st4);
        students.add(st5);
        // –°–æ–∑–¥–∞–º —Å—Ç—Ä–∏–º —Å –Ω—É–ª—è: –≥–æ–≤–æ—Ä—é —á—Ç–æ —Å—Ç—Ä–∏–º —Å–æ–¥–µ—Ä–∂–∏—Ç <Student> ‚Üí –Ω–∞–∑–æ–≤—É –µ–≥–æ myStream, –∏
        // –∑–¥–µ—Å—å -> /of()/ —É–∫–∞–∂—É —á—Ç–æ –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–æ–π —Å—Ç—Ä–∏–º. –ò –º–µ—Ç–æ–¥ /filter/ –ø—Ä–∏–º–µ–Ω–∏–º –∫ myStream
        Stream<Student> myStream = Stream.of(st1, st2, st3, st4, st5);
        myStream.filter(element -> element.getAge() > 22 && element.avgGrade < 7.2)
                .collect(Collectors.toList());
        // –¢–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç —Å—Ç—Ä–∏–º–∞ —Ç–æ–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏ —Ç–æ–∂–µ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
    }
}

class Utils {
    public static void myMethod(int a) {
        a = a + 5;
        System.out.println("Element = " + a);
    }
}


