package Stream_–ó–∞—É—Ä_—Ä–∞–∑–¥–µ–ª7_Streams_—á–µ—Ä–Ω—ã–π–ü–æ—è—Å;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class Test6_chaining {
    public static void main(String[] args) {

        // üìå –ú–µ—Ç–æ–¥ /chaining/    ______________________________________________________

        int[] array = {3, 8, 1, 5, 9, 12, 4, 21, 81, 7, 18};

        // –î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –ø–æ—Ç–æ–∫ –∏–∑ —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, –æ—Ç—Ñ–∏–ª—å—Ç—Ä—É–µ–º —Å—Ç—Ä–∏–º —Ç–∞–∫ —á—Ç–æ–± –æ—Å—Ç–∞–ª–∏—Å—å —Ç–æ–ª—å–∫–æ –Ω–µ—á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞,
        // –∑–∞—Ç–µ–º –ø–æ–¥–µ–ª–∏–º –Ω–∞ 3 —Ç–æ–ª—å–∫–æ —Ç–µ —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª—è—Ç—Å—è –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞ –∏ –Ω–∞–π–¥–µ–º —Å—É–º–º—É –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö
        // —á–∏—Å–µ–ª:
        int result = Arrays.stream(array)
                .filter(e -> e % 2 == 1)
                .map(e -> {
                    if (e % 3 == 0) {
                        e = e / 3;
                    }
                    return e;
                })
                .reduce((a, e) -> a + e)
                .getAsInt();
        System.out.println(result);   //  51
        // –í–æ—Ç —Ç–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –º–µ—Ç–æ–¥ /chaining/ - –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º–µ—Ç–æ–¥–æ–≤

        // –ï—â–µ –æ–¥–∏–Ω –ø—Ä–∏–º–µ—Ä.
        // –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ —á—Ç–æ –Ω–∞–º –Ω—É–∂–Ω–æ –¥–ª—è –Ω–∞—à–µ–≥–æ –ª–∏—Å—Ç–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å–ª–µ–¥—É—é—â–µ–µ: –∏–º–µ–Ω–∞ —Å–¥–µ–ª–∞—Ç—å –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏,
        // –ø–æ—Ç–æ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –ø–æ –ø–æ–ª—É - –≤—ã–±–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –¥–µ–≤—É—à–µ–∫, –∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤–æ–∑–≤—Ä–∞—Å—Ç—É –∏ –≤—ã–≤–µ–¥–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω.
        // –ï—Å–ª–∏ –≤—Å–µ —ç—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å –±–µ–∑ —Å—Ç—Ä–∏–º–∞ —É –Ω–∞—Å –±—É–¥–µ—Ç –Ω–∞–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞
        Student st1 = new Student("Ivan", 'm', 22, 3, 8.3);
        Student st2 = new Student("Nikolay", 'm', 28, 2, 6.4);
        Student st3 = new Student("Elena", 'f', 19, 1, 8.9);
        Student st4 = new Student("Petr", 'm', 35, 4, 7);
        Student st5 = new Student("Maria", 'f', 23, 3, 9.1);
        List<Student> students = new ArrayList<>();
        students.add(st1);
        students.add(st2);
        students.add(st3);
        students.add(st4);
        students.add(st5);

        students.stream()
                .map(element -> {      // —Å–¥–µ–ª–∞–µ–º –∏–º–µ–Ω–∞ —Å –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏
                    element.setName(element.getName()
                            .toUpperCase());
                    return element;
                })                    // —Ñ–∏–ª—å—Ç—Ä—É–µ–º ‚¨á: –µ—Å–ª–∏ –Ω–µ –∂–µ–Ω—Å–∫–∏–π ‚ûî —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç
                .filter(element -> element.getSex() == 'f')
                .sorted((x, y) -> x.getAge() - y.getAge()) // —Å–æ—Ä—Ç–∏—Ä—É–µ–º: –æ—Ç –±–æ–ª–µ–µ –º–ª–∞–¥—à–µ–≥–æ –∫ –±–æ–ª–µ–µ —Å—Ç–∞—Ä—à–µ–º—É
                .forEach(element -> System.out.println(element));
        /*–∫–æ–Ω—Å–æ–ª—å:
        Student{name='ELENA', sex=f, age=19, course=1, avgGrade=8.9}
        Student{name='MARIA', sex=f, age=23, course=3, avgGrade=9.1}*/

        // –†–∞–∑–±–µ—Ä–µ–º –≤–∞–∂–Ω—ã–µ –ø–æ–Ω—è—Ç–∏—è
        // ‚ù§Ô∏è–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –º–µ—Ç–æ–¥ /chaining/ –≤ —Å—Ç—Ä–∏–º–∞—Ö:
        // –£ –Ω–∞—Å –µ—Å—Ç—å –∫–∞–∫–æ–π-—Ç–æ Source (–Ω–∞–ø—Ä–∏–º–µ—Ä: –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∏–ª–∏ –º–∞—Å—Å–∏–≤)  ‚ûî –ø–æ—Ç–æ–º –º—ã —Å–æ–∑–¥–∞–µ–º –∏–∑ –Ω–∏—Ö —Å—Ç—Ä–∏–º  ‚ûî
        //  ‚ûî –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä–∏–º–∞ –≤ –Ω–∞—à–∏—Ö –º–µ—Ç–æ–¥–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–∑—ã–≤–∞—é—Ç—Å—è /Intermediate methods (lazy)/,
        // —Ç/–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã, —ç—Ç–∏ –º–µ—Ç–æ–¥—ã —Ç–∞–∫–∂–µ –Ω–∞–∑—ã–≤–∞—é—Ç lazy  ‚ûî –∏ –≤ –∫–æ–Ω–µ—á–Ω–æ–º –∏—Ç–æ–≥–µ —ç—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç—ã
        // (—Ç/–µ –Ω–∞—à –ø–æ—Ç–æ–∫) –ø–æ—Å—Ç—É–ø–∞—é—Ç –Ω–∞ –≤—Ö–æ–¥ –∫ /Terminal method (eager)/, —Ç/–µ –∫–æ–Ω–µ—á–Ω–æ–º—É –º–µ—Ç–æ–¥—É.
        // –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –ø–æ—Å—Ç—É–ø–∞—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç —Å—Ç—Ä–∏–º, —Ç/–µ –∫ –Ω–∏–º –ø—Ä–∏—à–µ–ª —Å—Ç—Ä–∏–º
        // –∏ –ø–æ—Å–ª–µ –Ω–∏—Ö –Ω–∞ output-–µ —Ç–æ–∂–µ —Å—Ç—Ä–∏–º. –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –≤ –Ω–∞—à–µ–π —Ü–µ–ø–æ—á–∫–µ –≤ –Ω–∞—à–µ–º
        // –º–µ—Ç–æ–¥ /chaining/-–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–Ω–æ–≥–æ, –Ω–æ –æ–Ω–∏ –Ω–µ –±—É–¥—É—Ç –∏—Å–ø–æ–ª–Ω–µ–Ω—ã –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω–∞—è
        // –æ–ø–µ—Ä–∞—Ü–∏—è (—Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥).
        // –ó–∞–ø–æ–º–Ω–∏—Ç–µ: ‚ùóÔ∏è –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –º—ã –Ω–µ –≤—ã–∑–æ–≤–µ–º —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥.‚ùóÔ∏è
        // –ê –ø–æ—á–µ–º—É –æ–Ω–∏ –Ω–∞–∑—ã–≤–∞—é—Ç—Å—è lazy? –í–æ–æ–±—â–µ lazy-–æ–ø–µ—Ä–∞—Ü–∏—è–º–∏ –Ω–∞–∑—ã–≤–∞—é—Ç—Å—è –æ–ø–µ—Ä–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞—é—Ç –ø–æ–∫–∞
        // —á—Ç–æ-—Ç–æ –Ω–µ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç. –ê –≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –Ω–∞—à–∏ /Intermediate methods/-—ã –Ω–µ —Å—Ä–∞–±–æ—Ç–∞—é—Ç –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç
        // –≤—ã–∑–≤–∞–Ω /Terminal method/.
        // ‚ù§Ô∏è –¢–µ–ø–µ—Ä—å –ø–æ–≥–æ–≤–æ—Ä–∏–º –æ —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω—ã—Ö –º–µ—Ç–æ–¥–∞—Ö.
        // –ö–∞–∫ —É–∂–µ –≤–∏–¥–µ–ª–∏ /forEach/ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω—ã–º –º–µ—Ç–æ–¥–∞–º, —ç—Ç–∏ –º–µ—Ç–æ–¥—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç —ç–ª–µ–º–µ–Ω—Ç—ã, —Ç/–µ
        // —Å—Ç—Ä–∏–º –∏ –∑–∞–≤–µ—Ä—à–∞—é—Ç —Ä–∞–±–æ—Ç—É —Å—Ç—Ä–∏–º–∞, —Ç–∞–∫ —á—Ç–æ —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä —Å—Ç–æ–∏—Ç –≤ –∫–æ–Ω—Ü–µ –∏ –ø–æ—Å–ª–µ –Ω–µ–≥–æ
        // –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –º–µ—Ç–æ–¥ —É–∂–µ –Ω–µ –≤—ã–∑–æ–≤–µ—à—å. –ê –ø–æ—á–µ–º—É –Ω–µ –≤—ã–∑–æ–≤–µ—à—å /Intermediate methods/?  ‚ûî
        //  ‚ûî –ü–æ—Ç–æ–º—É —á—Ç–æ /forEach/ –∫–∞–∫ –∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–º –ø–æ—Ç–æ–∫–∞,
        // forEach –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç void. –ö–∞–∫ –º—ã –ø–æ—Å–ª–µ –Ω–µ–≥–æ —Å–º–æ–∂–µ–º –≤—ã–∑–≤–∞—Ç—å –¥–æ–ø—É—Å—Ç–∏–º /map/ –µ—Å–ª–∏ —É –º–µ–Ω—è –Ω–µ—Ç –ø–æ—Ç–æ–∫–∞ ‚ûî
        // ‚ûî –Ω–∏–∫–∞–∫.    eager - –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è –∫–∞–∫ "–¥–µ–π—Å—Ç–≤—É—é—â–∏–π —Å—Ä–∞–∑—É, –Ω–µ—Ç–µ—Ä–ø–∏–ª–∏–≤—ã–π".
        // –¢–µ—Ä–º–∏–Ω–∞–ª-–æ–ø–µ—Ä–∞—Ç–æ—Ä—ã —ç—Ç–æ —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –ª–∏–±–æ void, –ª–∏–±–æ –∫–∞–∫–æ–π-—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ª–∏—á–Ω—ã–π –æ—Ç —Å—Ç—Ä–∏–º.
        // –ü–æ—ç—Ç–æ–º—É –ø–æ—Å–ª–µ –Ω–∏—Ö –Ω–∞—à –º–µ—Ç–æ–¥ chaining –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è.
        // –ò–∑ –ø—Ä–∏–º–µ—Ä–∞: –º–µ—Ç–æ–¥ filter –∏ –º–µ—Ç–æ–¥ map —Å—Ä–∞–±–æ—Ç–∞–ª–∏ –ø–æ—Ç–æ–º—É —á—Ç–æ –µ—Å—Ç—å –º–µ—Ç–æ–¥ reduce. –ú–µ—Ç–æ–¥ reduce
        // –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ—Å–ª–µ —Å–µ–±—è –ø–æ—Ç–æ–∫, –∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–∞–∫–æ–µ-—Ç–æ –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –æ–Ω —è–≤–ª—è–µ—Ç—Å—è —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω—ã–º.

        // –ü—Ä–∏–º–µ—Ä:
        Stream<Integer> stream1 = Stream.of(1, 2, 3, 4, 5, 1, 2, 3);
        stream1.filter(el -> {
            System.out.println("!!!");
            return el % 2 == 0;
        });
        // –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ—Ç–æ–¥–∞ filter –º—ã –Ω–µ —É–≤–∏–¥–∏–º –∫–∞–∫ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç—Å—è —Å—Ç—Ä–∏–º1, –Ω–æ –∫–∞–∫ –º–∏–Ω–∏–º—É–º –º—ã
        // –¥–æ–ª–∂–Ω—ã —É–≤–∏–¥–µ—Ç—å "!!!" –∑–Ω–∞–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ—Ç–æ–∫–∞ —Å—Ç—Ä–∏–º1 (8 —Ç—Ä–æ–π–Ω—ã—Ö !!!–∑–Ω–∞–∫–æ–≤ —É–≤–∏–¥–µ—Ç—å) ‚ûî
        // ‚ûî –∑–∞–ø—É—Å–∫–∞–µ–º ‚ûî –∏ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–∏–¥–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω–µ. –ü–æ—á–µ–º—É? –¥–∞ –ø–æ—Ç–æ–º—É —á—Ç–æ –º–µ—Ç–æ–¥ filter –ø—Ä–æ—Å—Ç–æ –Ω–µ
        // –æ–±—Ä–∞–±–æ—Ç–∞–ª—Å—è –∏ –æ–Ω –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç—Å—è –¥–æ —Ç–µ—Ö –ø–æ—Ä –ø–æ–∫–∞ –º—ã –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Ä–º–∏–Ω–∞–ª –º–µ—Ç–æ–¥.
        // –∞ –µ—Å–ª–∏ –¥–æ–ø–∏—à–µ–º /collect(Collectors.toList())/ ‚¨á
        Stream<Integer> stream2 = Stream.of(1, 2, 3, 4, 5, 1, 2, 3);
        stream2.filter(el -> {
            System.out.println("!!!");
            return el % 2 == 0;
        }).collect(Collectors.toList());
        /*–∫–æ–Ω—Å–æ–ª—å: (8 —Ç—Ä–æ–π–Ω—ã—Ö !!!–∑–Ω–∞–∫–æ–≤ —É–≤–∏–¥–∏–º)*/
        // –ó–¥–µ—Å—å –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑–∞–ª–∏ —á—Ç–æ –±–µ–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª-–æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –º–µ—Ç–æ–¥ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ—ç—Ç–æ–º—É
        // –æ–Ω - lazy (–ª–µ–Ω–∏–≤—ã–π), –∞ eager - –æ–Ω —Å—Ä–∞–∑—É —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –µ–≥–æ –≤—ã–∑—ã–≤–∞–µ—Ç–µ

    }
}