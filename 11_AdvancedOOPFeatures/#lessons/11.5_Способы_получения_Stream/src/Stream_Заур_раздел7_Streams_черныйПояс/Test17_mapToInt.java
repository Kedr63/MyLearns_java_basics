package Stream_–ó–∞—É—Ä_—Ä–∞–∑–¥–µ–ª7_Streams_—á–µ—Ä–Ω—ã–π–ü–æ—è—Å;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

public class Test17_mapToInt {
    public static void main(String[] args) {
        // üìå –ú–µ—Ç–æ–¥ /mapToInt/ (i)    ______________________________________________________

        // –î–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å—Ç—Ä–∏–º –ø–æ—Å–ª–µ —Å–µ–±—è, –∞ int-—Å—Ç—Ä–∏–º, —Ç/–µ —Å—Ç—Ä–∏–º –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç
        // –∑–Ω–∞—á–µ–Ω–∏—è int

        Student st1 = new Student("Ivan", 'm', 22, 3, 8.3);
        Student st2 = new Student("Nikolay", 'm', 28, 2, 6.4);
        Student st3 = new Student("Elena", 'f', 19, 1, 8.9);
        Student st4 = new Student("Petr", 'm', 35, 4, 7);
        Student st5 = new Student("Maria", 'f', 23, 3, 9.1);
        List<Student> students = new ArrayList<>();
        students.add(st1);
        students.add(st2);
        students.add(st3);
        students.add(st4);
        students.add(st5);

        // –ò—Å–ø–æ–ª—å–∑—É–µ–º mapToInt: —á—Ç–æ —É –Ω–∞—Å int —É —Å—Ç—É–¥–µ–Ω—Ç–æ–≤? ‚ûî –Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–æ–º–µ—Ä –∫—É—Ä—Å–∞ ‚ûî /getCourse/.
        // –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ ‚ûî mapToInt –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç intStream. –ò /collect(Collectors.toList())/
        // –ú—ã —Ö–æ—Ç–∏–º —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –Ω–æ–º–µ—Ä–∞ –∫—É—Ä—Å–æ–≤ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –ª–∏—Å—Ç /List<Integer> courses/, –Ω–æ —Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞–º
        // –Ω–µ —É–¥–∞–µ—Ç—Å—è —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å, —Ö–æ—Ç—è mapToInt –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ—Å–ª–µ —Å–µ–±—è –Ω–µ –ø–æ—Ç–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –∞ –ø–æ—Ç–æ–∫ –∏—Ö
        // –∫—É—Ä—Å–æ–≤ (—Ç/–µ –ø–æ—Ç–æ–∫ int-–∞), –º—ã –Ω–µ –º–æ–∂–µ–º –Ω–∞–∑–Ω–∞—á–∏—Ç—å –ª–∏—Å—Ç—É Integer-–æ–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã —Ç–∞–∫–æ–≥–æ
        // —Å—Ç—Ä–∏–º–∞. –ü–æ—á–µ–º—É? -> –ø–æ—Ç–æ–º—É —á—Ç–æ –∫–æ–≥–¥–∞ –º—ã —Ö–æ—Ç–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Å—Ç—Ä–∏–º–∞ –∑–∞–ø–∏—Å–∞—Ç—å –≤ –ª–∏—Å—Ç Integer, –º—ã
        // –º—ã –æ–±—è–∑–∞–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ /boxed/.
        // –ú–µ—Ç–æ–¥ /boxed/ –ø—Ä–æ—Å—Ç–æ –∫–æ–Ω–≤–µ–Ω—Ç–∏—Ä—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ int –≤ –∑–Ω–∞—á–µ–Ω–∏–µ Integer ‚ûî —É –Ω–∞—Å –∫—É—Ä—Å—ã —ç—Ç–æ int,
        // –∞ –Ω–∞–º –Ω—É–∂–Ω–æ –∫–æ–Ω–≤–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –≤ Integer. –≠—Ç–∏–º –∏ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥ /boxed/. –¢–µ–ø–µ—Ä—å –º–æ–∂–µ–º
        // –±–µ–∑ –ø—Ä–æ–±–ª–µ–º –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω –ª–∏—Å—Ç –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –∫—É—Ä—Å—ã

        List<Integer> courses = students.stream()
                .mapToInt(el -> el.getCourse())
                .boxed()
                .collect(Collectors.toList());
        System.out.println(courses);  // [3, 2, 1, 4, 3]

        // –ê –µ—Å–ª–∏ —Ö–æ—Ç–∏–º –≤—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥–Ω—é—é –æ—Ü–µ–Ω–∫—É (Double)
        List<Double> avgGrades = students.stream()
                .mapToDouble(el -> el.getAvgGrade())
                .boxed()
                .collect(Collectors.toList());
        System.out.println(avgGrades);   // [8.3, 6.4, 8.9, 7.0, 9.1]

        // –£ intStream-–∞ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ—Ç–æ–¥–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç —Å —á–∏—Å–ª–∞–º–∏: sum, average, min, max

        int sum = students.stream().mapToInt(el-> el.getCourse()).sum();  // –æ–Ω –ø—Ä–æ—Å—É–º–º–∏—Ä—É–µ—Ç –≤—Å–µ –∫—É—Ä—Å—ã
        // –Ω–∞—à–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –≤–æ–∑—Ä–∞—â–∞–µ—Ç int
        System.out.println(sum);  // 13

        double average = students.stream().mapToInt(el-> el.getCourse()).average().getAsDouble();
        // average —É–∂–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç optionalDouble, –ø–æ—ç—Ç–æ–º—É –º—ã –Ω–µ –º–æ–∂–µ–º optionalDouble –ø—Ä–∏—Å–≤–æ–∏—Ç—å
        // –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ç–∏–ø–∞ int.
        // –ú—ã –¥–æ–ª–∂–Ω—ã –∏–∑ optionalDouble —Å –ø–æ–º–æ—â—å—é —É–∂–µ –Ω–µ /get/, –∞ /getAsDouble/ –ø–æ–ª—É—á–∏—Ç—å —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ
        System.out.println(average);  // 2.6
        // –ü–æ–ª—É—á–∏–ª–∏ —Å—Ä. –∞—Ä–∏—Ñ. –∑–Ω–∞—á–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤

        int min = students.stream().mapToInt(el-> el.getCourse()).min().getAsInt();
        // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç optional –Ω–æ —É–∂–µ int,
        // –º—ã –º–æ–∂–µ–º –≤—ã–∑—ã–≤–∞—Ç—å –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é /getAsInt/, —Ç/–µ —É –Ω–µ–≥–æ –Ω–µ—Ç –º–µ—Ç–æ–¥–∞ get, –∑–∞—Ç–æ –µ—Å—Ç—å getAsInt,
        // –ø–æ—Ç–æ–º—É —á—Ç–æ —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ optional, –∞ optional int, –∫–æ—Ç–æ—Ä—ã–π –æ–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç –Ω–µ –ª—é–±–æ–µ –∫–∞–∫–æ–µ-—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ,
        // –∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ Integer.
        // –í—ã–≤–µ–¥–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫—É—Ä—Å
        System.out.println(min);  // 1

        int max = students.stream().mapToInt(el-> el.getCourse()).max().getAsInt();
        System.out.println(max);  // 4







    }
}
