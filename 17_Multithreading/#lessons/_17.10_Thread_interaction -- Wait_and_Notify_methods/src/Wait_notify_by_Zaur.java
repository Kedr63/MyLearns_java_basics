public class Wait_notify_by_Zaur {
  // üìå –ú–µ—Ç–æ–¥—ã wait notify –æ—Ç –ó–∞—É—Ä
  // –ò–Ω–æ–≥–¥–∞ –ø—Ä–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ –ø–æ—Ç–æ–∫–æ–≤ –≤—Å—Ç–∞–µ—Ç –≤–æ–ø—Ä–æ—Å –æ–± –∏–∑–≤–µ—â–µ–Ω–∏–∏ –æ–¥–Ω–∏—Ö –ø–æ—Ç–æ–∫–æ–≤ –æ –¥–µ–π—Å—Ç–≤–∏–∏ –¥—Ä—É–≥–∏—Ö,
  // –Ω–∞–ø—Ä–∏–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è –æ–¥–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –º–æ–≥—É—Ç –∑–∞–≤–∏—Å–∏—Ç—å –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—è –¥—Ä—É–≥–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –∏ –Ω–∞–¥–æ
  // –∫–∞–∫-—Ç–æ –∏–∑–≤–µ—Å—Ç–∏—Ç—å –æ–¥–∏–Ω –ø–æ—Ç–æ–∫ —á—Ç–æ –≤—Ç–æ—Ä–æ–π –ø–æ—Ç–æ–∫ –ø—Ä–æ–∏–∑–≤–µ–ª –∫–∞–∫—É—é-—Ç–æ —Ä–∞–±–æ—Ç—É. –ò –¥–ª—è –ø–æ–¥–æ–±–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π
  // —É –∫–ª–∞—Å—Å–∞ Object –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ —Ä—è–¥ –º–µ—Ç–æ–¥–æ–≤:
  // üìç wait - –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –≤—ã–∑—ã–≤–∞—é—â–∏–π –ø–æ—Ç–æ–∫ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –¥–æ —Ç–µ—Ö –ø–æ—Ä,
  // –ø–æ–∫–∞ –¥—Ä—É–≥–æ–π –ø–æ—Ç–æ–∫ –Ω–µ –≤—ã–∑–æ–≤–µ—Ç –º–µ—Ç–æ–¥ notify();
  // üìç notify - –ù–ï –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä –∏ –±—É–¥–∏—Ç –ø–æ—Ç–æ–∫, —É –∫–æ—Ç–æ—Ä–æ–≥–æ —Ä–∞–Ω–µ–µ –±—ã–ª –≤—ã–∑–≤–∞–Ω –º–µ—Ç–æ–¥ wait;
  // üìç notifyAll - –ù–ï –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä –∏ –±—É–¥–∏—Ç –≤—Å–µ –ø–æ—Ç–æ–∫–∏, —É –∫–æ—Ç–æ—Ä–æ–≥–æ —Ä–∞–Ω–µ–µ –±—ã–ª –≤—ã–∑–≤–∞–Ω –º–µ—Ç–æ–¥ wait;

  // –†–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø—Ä–∏–º–µ—Ä: –ø—É—Å—Ç—å —É –Ω–∞—Å –±—É–¥–µ—Ç –º–∞–≥–∞–∑–∏–Ω, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–æ–¥–∞—é—Ç —Ö–ª–µ–±, –Ω–∞ –≤–∏—Ç—Ä–∏–Ω–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
  // –º–æ–∂–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–µ –±–æ–ª–µ–µ –ø—è—Ç–∏ —Ö–ª–µ–±–æ–≤. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –µ—Å–ª–∏ –Ω–∞ –≤–∏—Ç—Ä–∏–Ω–µ –ø—è—Ç—å —Ö–ª–µ–±–æ–≤, —Ç–æ –ø—Ä–æ–¥–∞–≤–µ—Ü
  // –Ω–µ –º–æ–∂–µ—Ç –¥–æ–ª–æ–∂–∏—Ç—å —Ö–ª–µ–±–æ–≤ –∏ –¥–æ–ª–∂–µ–Ω –∂–¥–∞—Ç—å –∫–æ–≥–¥–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –∫—É–ø–∏—Ç —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ö–ª–µ–±, –ø–æ—Å–ª–µ —á–µ–≥–æ —Ö–ª–µ–±
  // –º–æ–∂–Ω–æ –¥–æ–∫–ª–∞–¥—ã–≤–∞—Ç—å. –ß—Ç–æ –∫–∞—Å–∞–µ—Ç—Å—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è, —Ç–æ –ø–æ–Ω—è—Ç–Ω–æ–µ –¥–µ–ª–æ –µ—Å–ª–∏ –Ω–∞ –≤–∏—Ç—Ä–∏–Ω–µ –Ω–µ—Ç —Ö–ª–µ–±–∞, –æ–Ω –¥–æ–ª–∂–µ–Ω
  // –∂–¥–∞—Ç—å –ø–æ–∫–∞ —Ö–ª–µ–± –Ω–µ –ø–æ—è–≤–∏—Ç—Å—è. –ò –¥–∞–≤–∞–π—Ç–µ –¥–æ–ø—É—Å—Ç–∏–º —á—Ç–æ –≤ –¥–µ–Ω—å –ø–µ—á–µ—Ç—Å—è –≤—Å–µ–≥–æ 10 —Ö–ª–µ–±–æ–≤.
  // –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è —Ö–ª–µ–±–∞ –±—É–¥–µ–º –Ω–∞–∑—ã–≤–∞—Ç—å Producer, –∞ –ª—é–±–∏—Ç–µ–ª—è –ø–æ–µ—Å—Ç—å —Ö–ª–µ–± - Consumer (–ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å).
  // –ö–∞–∂–¥—ã–π –∏–∑ –Ω–∏—Ö –±—É–¥–µ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫, –∏ –æ–Ω–∏ –±—É–¥—É—Ç –æ–±—â–∞—Ç—å—Å—è –º–µ–∂–¥—É —Å–æ–±–æ–π —Å –ø–æ–º–æ—â—å—é
  // –º–µ—Ç–æ–¥–æ–≤ wait –∏ notify, —Ç–∞–∫ –µ—Å–ª–∏ —Ö–ª–µ–±–∞ –Ω–µ—Ç –Ω–∞ –≤–∏—Ç—Ä–∏–Ω–µ, –ø–æ—Ç–æ–∫ Consumer-–∞ –±—É–¥–µ—Ç –æ–∂–∏–¥–∞—Ç—å - –≤—ã–∑—ã–≤–∞—è
  // –º–µ—Ç–æ–¥ wait(). –ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ö–ª–µ–±–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–º, –∫–æ–≥–¥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –¥–æ–±–∞–≤–∏—Ç —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ö–ª–µ–±,
  // –æ–Ω –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –º–µ—Ç–æ–¥ notify(), –¥–∞–≤–∞—è –ø–æ–Ω—è—Ç—å –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—é —á—Ç–æ —Ö–ª–µ–± –ø–æ—è–≤–∏–ª—Å—è –∏ —Ç–≤–æ–π –ø–æ—Ç–æ–∫ –º–æ–∂–µ—Ç
  // –ø—Ä–æ—Å—ã–ø–∞—Ç—å—Å—è, —Ç.–µ. —Ö–ª–µ–± –ø–æ—è–≤–∏–ª—Å—è -> –º–æ–∂–µ—à—å –ø–æ–∫—É–ø–∞—Ç—å –µ–≥–æ. –ù–æ –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ notify() Producer-–æ–º
  // –Ω–µ –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç –µ–≥–æ –ø–æ—Ç–æ–∫ —É—Å–Ω—É—Ç—å, –æ–Ω –º–æ–∂–µ—Ç –¥–∞–ª—å—à–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å —Å–≤–æ–π —Ö–ª–µ–±. –ú–µ—Ç–æ–¥ notify() –ø—Ä–æ—Å—Ç–æ
  // –±—É–¥–∏—Ç –ø–æ—Ç–æ–∫ Consumer-–∞, –Ω–æ —Å–∞–º –Ω–µ –∑–∞—Å—ã–ø–∞–µ—Ç. –ê –∫–æ–≥–¥–∞ –¥–æ–ª–∂–µ—Ç –∑–∞—Å—ã–ø–∞—Ç—å –ø–æ—Ç–æ–∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è?
  // –ï—Å–ª–∏ —Ö–ª–µ–±–∞ —Å—Ç–∞–ª–æ 5 –Ω–∞ –ø—Ä–∏–ª–∞–≤–∫–µ, —Ç–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—é –¥–µ–ª–∞—Ç—å –Ω–µ—á–µ–≥–æ, –æ–Ω –Ω–µ –º–æ–∂–µ—Ç –±–æ–ª—å—à–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞
  // –ø—Ä–∏–ª–∞–≤–æ–∫ —Ö–ª–µ–±, –∏ –º–æ–∂–µ—Ç –ø–æ—Å–ø–∞—Ç—å –≤—ã–∑–≤–∞–≤ –º–µ—Ç–æ–¥ wait(). –ü–æ—Ç–æ–∫ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è, –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å,
  // —Ä–∞–∑–±—É–¥–∏—Ç –ø–æ—Ç–æ–∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è —Ç–æ–≥–¥–∞ –∫–æ–≥–¥–∞ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ö–ª–µ–± –±—É–¥–µ—Ç –∫—É–ø–ª–µ–Ω. –ï—Å–ª–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å –≤–æ–∑—å–º–µ—Ç
  // –æ–¥–∏–Ω —Ö–ª–µ–± –∏ —Ö–ª–µ–±–∞ —Å—Ç–∞–Ω–µ—Ç 4, —Ç–æ–≥–¥–∞ –æ–Ω –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥ notify() –∏ —Å–∫–∞–∑–∞—Ç—å –ø–æ—Ç–æ–∫—É
  // Producer-–∞ - –ø—Ä–æ—Å—ã–ø–∞–π—Å—è, —Ç—ã –º–æ–∂–µ—à—å –∫–ª–∞—Å—Ç—å —Ö–ª–µ–± –Ω–∞ –≤–∏—Ç—Ä–∏–Ω—É. –í–æ—Ç —Ç–∞–∫–æ–π –±—É–¥–µ—Ç –ø—Ä–∏–º–µ—Ä.
}

class WaitNotify {

  public static void main(String[] args) {
    Market market = new Market();
    Producer1 producer1 = new Producer1(market);
    Consumer1 consumer1 = new Consumer1(market);
    Thread thread1 = new Thread(producer1);
    Thread thread2 = new Thread(consumer1);
    thread1.start();
    thread2.start();

  }
}

class Market {

  private int breadCount = 0;

  // –º–µ—Ç–æ–¥ —Å–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∑—è—Ç–∏—è —Ö–ª–µ–±–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–µ–º
  public synchronized void getBread() {
    while (breadCount < 1) {
      try {
        wait();
      } catch (InterruptedException e) {
        throw new RuntimeException(e);
      }
    }
    breadCount--;
    System.out.println("–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å –∫—É–ø–∏–ª 1 —Ö–ª–µ–±");
    System.out.println("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ö–ª–µ–±–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ = " + breadCount);
    notify();  // —Å–æ–æ–±—â–∞–µ–º —Ç–µ–º —Å–∞–º—ã–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—é, —á—Ç–æ –∫–æ–ª-–≤–æ —Ö–ª–µ–±–∞ —É–º–µ–Ω—å—à–∏–ª–æ—Å—å –Ω–∞ 1 -> —Ç—ã –º–æ–∂–µ—à—å
    // –¥–æ–±–∞–≤–ª—è—Ç—å —Ö–ª–µ–±
  }

  // –º–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ö–ª–µ–±–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–º
  public synchronized void putBread() {
    while (breadCount >= 5) {
      try {
        wait();
      } catch (InterruptedException e) {
        throw new RuntimeException(e);
      }
    }
    breadCount++; // –µ—Å–ª–∏ —Ö–ª–µ–±–∞ –Ω–µ 5, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º —Ö–ª–µ–±
    System.out.println("–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –¥–æ–±–∞–≤–∏–ª –Ω–∞ –≤–∏—Ç—Ä–∏–Ω—É 1 —Ö–ª–µ–±");
    System.out.println("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ö–ª–µ–±–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ = " + breadCount);
    notify(); // –∏ –¥–æ–ª–∂–Ω—ã –∏–∑–≤–µ—Å—Ç–∏—Ç—å –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è —á—Ç–æ —Ö–ª–µ–± –¥–æ–±–∞–≤–∏–ª—Å—è
  }
}

// –¢–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–¥–∏–º –ø–æ—Ç–æ–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è –∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è
class Producer1 implements Runnable {

  Market market;

  public Producer1(Market market) {
    this.market = market;
  }

  @Override
  public void run() { // –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –±—É–¥–µ—Ç –¥–µ–ª–∞—Ç—å 10 —Ö–ª–µ–±–æ–≤ –≤ –¥–µ–Ω—å
    for (int i = 0; i < 10; i++) {
      market.putBread();
    }
  }
}

class Consumer1 implements Runnable {

  Market market;

  public Consumer1(Market market) {
    this.market = market;
  }

  @Override
  public void run() { // –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å —Å–º–æ–∂–µ—Ç –ø–æ–∫—É–ø–∞—Ç—å 10 —Ö–ª–µ–±–æ–≤ –≤ –¥–µ–Ω—å
    for (int i = 0; i < 10; i++) {
      market.getBread();
    }
  }
}

// –í –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–ª—É—á–∞—è—Ö –Ω–∞—à–∏ –≤—ã–∑–æ–≤—ã notify(), –±—É–¥—å —Ç–æ –∏–∑ getBread() –∏–ª–∏ –∏–∑ putBread(), –±—ã–≤–∞—é—Ç —Ö–æ–ª–æ—Å—Ç—ã–º–∏
// —Ç.–µ. –¥—Ä—É–≥–æ–π –ø–æ—Ç–æ–∫, –ø–æ—Ç–æ–∫ –Ω–µ –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è notify(), –Ω–µ –∂–¥–µ—Ç (–æ–Ω –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
// –æ–∂–∏–¥–∞–Ω–∏—è, –æ–Ω —Ç–æ–∂–µ –∞–∫—Ç–∏–≤–Ω—ã–π, –ø—Ä–æ—Å—Ç–æ –º–æ–Ω–∏—Ç–æ—Ä –∑–∞–Ω—è—Ç –Ω–µ –∏–º) –∏ —Ç–æ–≥–¥–∞ —ç—Ç–æ—Ç notify() –±—ã–≤–∞–µ—Ç —Ö–æ–ª–æ—Å—Ç—ã–º.
// üìå –û—á–µ–Ω—å –≤–∞–∂–Ω–æ –ø–æ–Ω—è—Ç—å, —á—Ç–æ –≤—Å–µ —ç—Ç–∏ –º–µ—Ç–æ–¥—ã wait() notify() –≤—ã–∑—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∏–∑ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ
// –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, —Ç.–µ –∏–∑ synchronized –±–ª–æ–∫–∞ –∏–ª–∏ –º–µ—Ç–æ–¥–∞. –î–∞–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –≤—ã–∑—ã–≤–∞—é—Ç—Å—è –Ω–∞ –æ–±—ä–µ–∫—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π
// –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è lock-–∞ –≤ –Ω–∞—à–∏—Ö synchronized –º–µ—Ç–æ–¥–∞—Ö –∏–ª–∏ –±–ª–æ–∫–∞—Ö, —Ç.–µ. –∫–æ–≥–¥–∞ –º—ã –∑–¥–µ—Å—å –≤
// –º–µ—Ç–æ–¥–∞—Ö –ø–∏—à–µ–º –ø—Ä–æ—Å—Ç–æ wait() –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ notify(), —Ç–æ –∫–∞–∫ –∏ –ª—é–±–æ–π –º–µ—Ç–æ–¥ –æ–Ω–∏ —Å—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –Ω–∞ /this/,
// —ç—Ç–æ —Ç–æ–∂–µ —Å–∞–º–æ–µ —á—Ç–æ /this.notify();/ , –∏ —É –Ω–∞—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ç–æ–∂–µ –∏–¥–µ—Ç –ø–æ –æ–±—ä–µ–∫—Ç—É /this/.
// –ï—Å–ª–∏ –∂–µ –º—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –¥–æ–ø—É—Å—Ç–∏–º synchronized-–±–ª–æ–∫ –∏ –≤ –Ω–µ–º —É–∫–∞–∑–∞–ª–∏ —á—Ç–æ –º—ã —Å—Ç–∞–≤–∏–º lock –Ω–∞ –º–æ–Ω–∏—Ç–æ—Ä–µ
// –∫–∞–∫–æ–≥–æ-—Ç–æ –¥—Ä—É–≥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ (–¥–æ–ø—É—Å—Ç–∏–º —Å–æ–∑–¥–∞–ª–∏ –æ–±—ä–µ–∫—Ç lock –∫–ª–∞—Å—Å–∞ Object) –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è –±—É–¥–µ–º
// –Ω–∞ –Ω–µ–º –≤ –æ–¥–Ω–æ–º –º–µ—Ç–æ–¥–µ –∏ —Ç–æ–≥–¥–∞ –º—ã –µ—Å—Ç–µ—Å—Å—Ç–≤–µ–Ω–Ω–æ wait() –∏ notify() –¥–æ–ª–∂–Ω—ã –≤—ã–∑—ã–≤–∞—Ç—å –∏—Å–ø–æ–ª—å–∑—É—è —ç—Ç–æ—Ç –æ–±—ä–µ–∫—Ç
// –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –∏–¥–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è /lock.wait();/  /lock.notify();/
// –°–¥–µ–ª–∞–µ–º —Ç–æ—Ç –∂–µ –∫–æ–¥ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ lock  –∏ output –±—É–¥–µ—Ç —Ç–∞–∫–∏–º –∂–µ  (–∫–æ–¥ –Ω–∏–∂–µ)

class WaitNotify2 {

  public static void main(String[] args) {
    Market2 market2 = new Market2();
    Producer2 producer2 = new Producer2(market2);
    Consumer2 consumer2 = new Consumer2(market2);
    Thread thread1 = new Thread(producer2);
    Thread thread2 = new Thread(consumer2);
    thread1.start();
    thread2.start();

  }
}

class Market2 {

  private int breadCount = 0;
  private final Object lock = new Object();

  public void getBread() {
    synchronized (lock) {
      while (breadCount < 1) {
        try {
          lock.wait();                      // üìç
        } catch (InterruptedException e) {
          throw new RuntimeException(e);
        }
      }
      breadCount--;
      System.out.println("–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å –∫—É–ø–∏–ª 1 —Ö–ª–µ–±");
      System.out.println("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ö–ª–µ–±–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ = " + breadCount);
      lock.notify();                         // üìç
    }
  }

  public void putBread() {
    synchronized (lock) {
      while (breadCount >= 5) {
        try {
          lock.wait();                        // üìç
        } catch (InterruptedException e) {
          throw new RuntimeException(e);
        }
      }
      breadCount++;
      System.out.println("–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –¥–æ–±–∞–≤–∏–ª –Ω–∞ –≤–∏—Ç—Ä–∏–Ω—É 1 —Ö–ª–µ–±");
      System.out.println("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ö–ª–µ–±–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ = " + breadCount);
      lock.notify();                           // üìç
    }
  }
}

class Producer2 implements Runnable {

  Market2 market2;

  public Producer2(Market2 market) {
    this.market2 = market;
  }

  @Override
  public void run() {
    for (int i = 0; i < 10; i++) {
      market2.putBread();
    }
  }
}

class Consumer2 implements Runnable {

  Market2 market2;

  public Consumer2(Market2 market) {
    this.market2 = market;
  }

  @Override
  public void run() {
    for (int i = 0; i < 10; i++) {
      market2.getBread();
    }
  }
}

// üìç –ü—Ä–æ—Å—Ç–æ —É—á—Ç–∏—Ç–µ —Ç–æ—Ç –º–æ–º–µ–Ω—Ç –Ω–∞ –º–æ–Ω–∏—Ç–æ—Ä–µ –∫–∞–∫–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –≤—ã –¥–µ–ª–∞–µ—Ç–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é, –Ω–∞ —Ç–æ–º –∂–µ
// —Å–∞–º–æ–º –æ–±—ä–µ–∫—Ç–µ –≤—ã –¥–æ–ª–∂–Ω—ã –≤—ã–∑—ã–≤–∞—Ç—å wait() –∏ notify()
// üìå –ò –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ–µ –ó–ê–ú–ï–ß–ê–ù–ò–ï: wait() - –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä, notify() - –Ω–µ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä.

// –ü–æ –º–µ—Ç–æ–¥—É wait(): –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –º–∏–ª–∏—Å–µ–∫—É–Ω–¥—ã. –ï—Å–ª–∏ –Ω–∞–ø–∏—à–µ–º /wait(1000)/ - —ç—Ç–æ –±—É–¥–µ—Ç –æ–∑–Ω–∞—á–∞—Ç—å
// —á—Ç–æ —Å—Ç–æ–ª—å–∫–æ —ç—Ç–æ—Ç –ø–æ—Ç–æ–∫ –∫–æ—Ç–æ—Ä—ã–π –∂–¥–µ—Ç, –±—É–¥–µ—Ç –∂–¥–∞—Ç—å –º–∞–∫—Å–∏–º—É–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏, —Ç.–µ. –µ—Å–ª–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏ 1—Å–µ–∫
// –¥—Ä—É–≥–æ–π –ø–æ—Ç–æ–∫ –∫–∞–∫–æ–π-—Ç–æ –Ω–µ –≤—ã–∑–æ–≤–µ—Ç notify(), –∏ —ç—Ç–æ—Ç –ø–æ—Ç–æ–∫ –Ω–µ —Å—Ç–∞–Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–º, —Ç–æ —á–µ—Ä–µ–∑ 1—Å–µ–∫ –æ–Ω
// –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç –∂–¥–∞—Ç—å –∏ —Å—Ç–∞–Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–º, —Ç.–µ. –∫–∞–∫–æ–π –∏–∑ —ç—Ç–∏—Ö –¥–≤—É—Ö —Å–æ–±—ã—Ç–∏–π –±—ã—Å—Ç—Ä–µ–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–π–¥–µ—Ç 1—Å –∏–ª–∏
// –≤—ã–∑–æ–≤–µ—Ç—Å—è –º–µ—Ç–æ–¥ notify(), —Ç–æ —Å–æ–±—ã—Ç–∏–µ –∏ –ø–µ—Ä–µ–≤–µ–¥–µ—Ç –Ω–∞—à thread –≤—ã–∑–≤–∞–≤—à–∏–π /wait(1000)/ –≤ –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ

// –ò –ø–æ—á–µ–º—É –ø–æ–º–µ—â–∞–µ–º –Ω–∞—à /wait()/ –≤ while loop, –∞ –Ω–µ –≤ if loop. –≠—Ç–æ —Ä–µ–º–æ–º–µ–Ω–¥–∞—Ü–∏—è –∏–∑ java-doc, –≥–æ–≤–æ—Ä–∏—Ç—Å—è
// —á—Ç–æ –ø–æ—Ç–æ–∫ –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤ –æ—á–µ–Ω—å —Ä–µ–¥–∫–∏—Ö —Å–ª—É—á–∞—è—Ö –º–æ–∂–µ—Ç –ø—Ä–æ—Å–Ω—É—Ç—å—Å—è –±–µ–∑ notify() –∏ —Ç–æ–≥–¥–∞ –º—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ
// —É—Å–ª–æ–≤–∏–µ while –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∏—Ç—Å—è –µ—â–µ —Ä–∞–∑, –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ—Å—ã–ø–∞–Ω–∏–µ –ø–æ—Ç–æ–∫–∞ –±—ã–ª–æ —Å–ª—É—á–∞–π–Ω—ã–º, —Ç–æ –æ–ø—è—Ç—å —Å—Ä–∞–±–æ—Ç–∞–µ—Ç
// wait() –∏ –ø–æ—Ç–æ–∫ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç –∂–¥–∞—Ç—å, –ø–æ—ç—Ç–æ–º—É –∏—Å–ø–æ–ª—å–∑—É–µ–º while, –∞ –Ω–µ if. –ï—Å–ª–∏ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ if, —Ç–æ —É—Å–ª–æ–≤–∏–µ
// —Å–Ω–æ–≤–∞ –±—ã –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–ª–æ—Å—å –∏ –ø–æ—Ç–æ–∫ –Ω–∞—á–∞–ª –±—ã –±–æ—Ä–¥—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–æ–≥–¥–∞ –∫–æ–≥–¥–∞ –µ–º—É —Å–∞–º–æ–µ –≤—Ä–µ–º—è –∂–¥–∞—Ç—å