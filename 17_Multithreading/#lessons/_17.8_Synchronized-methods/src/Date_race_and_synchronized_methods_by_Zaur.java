public class Date_race_and_synchronized_methods_by_Zaur {

  // –†–∞–∑–±–µ—Ä–µ–º —Ç–µ—Ö–Ω–∏–∫—É —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ—Ç–æ–∫–æ–≤ –∫–æ–≥–¥–∞ –≤ –Ω–∞—à–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ—Ç–æ–∫–æ–≤ —Ö–æ—Ç—è—Ç –º–µ–Ω—è—Ç—å
  // –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞—à–µ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, —Ç.–µ –ø–æ—Ç–æ–∫–∏ –º–æ–≥—É—Ç –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –º–µ–Ω—è—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –¥–∞–Ω–Ω—ã–µ, —ç—Ç–æ –º–æ–∂–µ—Ç
  // –ø–æ–≤–ª–µ—á—å –∑–∞ —Å–æ–±–æ–π –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è
  // –†–∞—Å–º–æ—Ç—Ä–∏–º –ø—Ä–∏–º–µ—Ä:
}

/*üìç 2 */
class Ex1 {
  public static void main(String[] args) {
    MyRunnableImpl1 myRunnableImpl1 = new MyRunnableImpl1(); // –∏ —Å–æ–∑–¥–∞–¥–∏–º 3 –ø–æ—Ç–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É—è —ç—Ç–æ—Ç myRunnableImpl1
    Thread thread1 = new Thread(myRunnableImpl1);
    Thread thread2 = new Thread(myRunnableImpl1);
    Thread thread3 = new Thread(myRunnableImpl1);
    thread1.start();
    thread2.start();
    thread3.start();

    // –∫–æ–Ω—Å–æ–ª—å: 3 4 5 2 6 7 3 8 9  \\–ö–∞–∫ –≤–∏–¥–∏–º –Ω–µ—Ç –Ω–∏–∫–∞–∫–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –∫–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –∑–∞–ø—É—Å–∫
    // –¥–∞–µ—Ç –Ω–æ–≤—ã–π output, –¥–∞–∂–µ –µ—Å–ª–∏ –ø—Ä–æ–ø–∏—à–µ–º \volatile static int count = 0;\ —ç—Ç–æ –Ω–µ –ø–æ–º–æ–∂–µ—Ç.
    // –ó–¥–µ—Å—å –Ω–µ—Ç –Ω–∏–∫–∞–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –º–µ–∂–¥—É –ø–æ—Ç–æ–∫–∞–º–∏. –ê –æ–∂–∏–¥–∞–ª–∏ –Ω–∞ –∫–æ–Ω—Å–æ–ª—å: 1 2 3 4 5 6 7 8 9
  }
}

/*üìç 1 */
class Counter {
  static int count = 0;
}

class MyRunnableImpl1 implements Runnable {
  public void increment() {
    Counter.count++;
    System.out.print(Counter.count + " ");
  }

  @Override
  public void run() {
    for (int i = 0; i < 3; i++) {
      increment();
    }
  }
}
// üìç Date race - –≥–æ–Ω–∫–∞ –¥–∞–Ω–Ω—ã—Ö, —Ç.–µ. –ø–æ—Ç–æ–∫–∏ –∫–∞–∫ –±—É–¥—Ç–æ –±—ã —É—á–∞—Å—Ç–≤—É—é—Ç –≤ –≥–æ–Ω–∫–µ, –ø—ã—Ç–∞—é—Ç—Å—è –ø–æ–±—ã—Å—Ç—Ä–µ–π –ø—Ä–æ–¥–µ–ª–∞—Ç—å
// —Å–≤–æ–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏, —É –∫–æ–≥–æ-—Ç–æ —ç—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –±—ã—Å—Ç—Ä–µ–µ —É –∫–æ–≥–æ-—Ç–æ –º–µ–¥–ª–µ–Ω–Ω–µ–µ.
// –ü–æ–∫–∞ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –Ω–µ –ø—Ä–µ–¥–ª–æ–∂–∏–ª.

// –†–∞—Å—Å–º–æ—Ç—Ä–∏–º –µ—â–µ –ø—Ä–∏–º–µ—Ä:
class Ex2 {
  static int counter = 0;
  public static void increment() {
    counter++;
  }

  public static void main(String[] args) throws InterruptedException {
    Thread thread1 = new Thread(new R());
    Thread thread2 = new Thread(new R());
    thread1.start();
    thread2.start();
    thread1.join();
    thread2.join();
    System.out.println(counter); // join() —Å–Ω–∞—á–∞–ª–∞ –¥–∞–µ—Ç –ø–æ—Ç–æ–∫–∞–º –∑–∞–∫–æ–Ω—á–∏—Ç—å –∏ –ø–æ—Ç–æ–º —Ç–æ–ª—å–∫–æ –≤—ã–¥–µ–¥–µ—Ç
    // –≤ –∫–æ–Ω—Å–æ–ª—å –∑–Ω–∞—á–µ–Ω–∏–µ /counter/, –µ—Å–ª–∏ —Ç–∞–∫ –Ω–µ —Å–¥–µ–ª–∞—Ç—å —Ç–æ /counter/ –≤—ã–≤–µ–¥–µ—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å, –∞ –ø–æ—Ç–æ–∫–∏
    // –µ—â–µ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å.
    // –ß–µ–º—É –±—É–¥–µ—Ç —Ä–∞–≤–µ–Ω /counter/? –ü–µ—Ä–≤—ã–π –ø–æ—Ç–æ–∫ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∏—Ä—É–µ—Ç –Ω–∞ 1000 –∏ –≤—Ç–æ—Ä–æ–π —Ç–∞–∫–∂–µ –Ω–∞ 1000 –∏ –¥–æ–ª–∂–Ω–æ
    // –ø–æ–ª—É—á–∏—Ç—å—Å—è 2000. –í –∏—Ç–æ–≥–µ –∏–Ω–æ–≥–¥–∞ –æ–Ω –±—É–¥–µ—Ç —Ä–∞–≤–Ω—è—Ç—å—Å—è 2000 –∏–Ω–æ–≥–¥–∞ –Ω–µ—Ç, –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç üìçDate race,
    // –ø–æ—Ç–æ–º—É —á—Ç–æ —Ä–∞–±–æ—Ç–∞ –Ω–∞—à–∏—Ö –ø–æ—Ç–æ–∫–æ–≤ –Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞, –æ–Ω–∏ –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞ –Ω–∏–∫–∞–∫ –Ω–µ –∑–∞–≤–∏—Å—è—Ç,
    // –æ–Ω–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –ø–∞—Ä—Ä–∞–ª–µ–ª—å–Ω–æ –¥–µ–ª–∞—é—Ç —Å–≤–æ—é —Ä–∞–±–æ—Ç—É –∏ –Ω–µ –æ–±—Ä–∞—â–∞—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è —á—Ç–æ –æ–Ω–∏ –º–æ–≥—É—Ç –ø–æ–º–µ—à–∞—Ç—å
    // –¥—Ä—É–≥ –¥—Ä—É–≥—É
    // üìçDate race - —ç—Ç–æ –ø—Ä–æ–±–ª–µ–º–∞, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å –∫–æ–≥–¥–∞ –¥–≤–∞ –∏ –±–æ–ª–µ–µ –ø–æ—Ç–æ–∫–æ–≤ –æ–±—Ä–∞—â–∞—é—Ç—Å—è –∫
    // –æ–¥–Ω–æ–π –∏ —Ç–æ–π –∂–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏ –∫–∞–∫ –º–∏–Ω–∏–º—É–º –æ–¥–∏–Ω –ø–æ—Ç–æ–∫ –µ–µ –∏–∑–º–µ–Ω—è–µ—Ç
    // –¥–∞–∂–µ –µ—Å–ª–∏ –ø—Ä–æ–ø–∏—à–µ–º \volatile static int counter = 0;\ —ç—Ç–æ –Ω–µ –ø–æ–º–æ–∂–µ—Ç.
  }
}

class R implements Runnable {
  @Override
  public void run() {
    for (int i = 0; i < 1000; i++) {
      Ex2.increment();
    }
  }
}

// –ö–∞–∫ —Ä–µ—à–∏—Ç—å —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É?
// –ù–∞–º –Ω—É–∂–Ω–æ –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω—ã–º –≤ —Ç–æ–º —á—Ç–æ –≤ –æ–¥–Ω–æ –∏ —Ç–æ–∂–µ –≤—Ä–µ–º—è —Å –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π \counter\ , —Ç.–µ —á—Ç–µ–Ω–∏–µ –∏ –∑–∞–ø–∏—Å—å
// —ç—Ç–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –≤ –æ–¥–Ω–æ –∏ —Ç–æ–∂–µ –≤—Ä–µ–º—è –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∏–º –ø–æ—Ç–æ–∫–æ–º, —Ç.–µ –∫ —ç—Ç–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
// –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –æ–±–∞ –ø–æ—Ç–æ–∫–∞ —É–∂–µ –Ω–µ –æ–±—Ä–∞—â–∞–ª–∏—Å—å.
// –ö–∞–∫ —ç—Ç–æ–≥–æ –¥–æ–±–∏—Ç—å—Å—è? –ú—ã –º–æ–∂–µ–º –ø–æ—Å—Ç–∞–≤–∏—Ç—å /lock/ (–ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è –∫–∞–∫ –∑–∞–º–æ–∫) –∏ –¥–æ–±–∏—Ç—å—Å—è —Ç–æ–≥–æ —á—Ç–æ
// –º–µ—Ç–æ–¥ increment() –≤ –æ–¥–Ω–æ –∏ —Ç–æ–∂–µ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–¥–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞, –ø–æ—Ç–æ–º—É —á—Ç–æ –Ω–∞–º –≤–∞–∂–Ω–æ —á—Ç–æ–±—ã
// counter —É–≤–µ–ª–∏—á–∏–≤–∞–ª—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∏–º –ø–æ—Ç–æ–∫–æ–º –≤ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏, —ç—Ç–æ –º–æ–∂–Ω–æ –¥–æ—Å—Ç–∏—á—å —Å –ø–æ–º–æ—â—å—é
// —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–º–∫–∞. –°—Ç–∞–≤–∏—Ç—Å—è –∑–∞–º–æ–∫ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —É—á–∞—Å—Ç–æ–∫ –∫–æ–¥–∞ –∏ —Ç–µ–ø–µ—Ä—å –≤ –æ–¥–Ω–æ –∏ —Ç–æ–∂–µ –≤—Ä–µ–º—è —Ç–æ–ª—å–∫–æ
// –æ–¥–∏–Ω –ø–æ—Ç–æ–∫ —Å–º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –Ω–∞—à –º–µ—Ç–æ–¥ (–∏–ª–∏ —É—á–∞—Å—Ç–æ–∫ –∫–æ–¥–∞), —Å –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –∑–∞–º–∫–∞ –¥–æ—Å—Ç–∏–≥–∞–µ—Ç—Å—è
// —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è (—ç—Ç–æ –∏ –µ—Å—Ç—å –ø—Ä–∏–Ω—Ü–∏–ø —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏)

// –≠—Ç–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–æ—Å—Ç–∏–≥–∞–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –∫–ª—é—á–µ–≥–æ —Å–ª–æ–≤–∞ synchronized –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –Ω–∞—à–µ–≥–æ –º–µ—Ç–æ–¥–∞ (—Å–º. –ø—Ä–∏–º–µ—Ä –Ω–∏–∂–µ),
// –∏ —Ç–µ–ø–µ—Ä—å —ç—Ç—É –æ–ø–µ—Ä–∞—Ü–∏—é –≤ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ –º–æ–∂–µ—Ç –¥–µ–ª–∞—Ç—å –∏–ª–∏ thread1 –∏–ª–∏ thread2. –ö–∞–∂–¥—ã–π –∏–∑
// —ç—Ç–∏—Ö –ø–æ—Ç–æ–∫–æ–≤ –±—É–¥–µ—Ç –∑–∞–±–µ–≥–∞—Ç—å –≤ –º–µ—Ç–æ–¥ increment() - 1000 —Ä–∞–∑. –ö–∞–∫–æ–π –ø–æ—Ç–æ–∫ –±—É–¥–µ—Ç —à—É—Å—Ç—Ä–µ–µ, —Ç–æ—Ç –∏ –±—É–¥–µ—Ç
// –∑–∞—Ö–æ–¥–∏—Ç—å –≤ –º–µ—Ç–æ–¥ –ø–µ—Ä–≤—ã–º - —Å—Ç–∞–≤–∏—Ç—å –∑–∞–º–æ–∫, –∏ —Ç–æ–ª—å–∫–æ –≤—ã—Ö–æ–¥—è –∏–∑ –º–µ—Ç–æ–¥–∞ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –∑–∞–º–æ–∫, –ø–æ—Ç–æ–º –±—É–¥–µ—Ç
// –∑–∞—Ö–æ–¥–∏—Ç—å –¥—Ä—É–≥–æ–π –ø–æ—Ç–æ–∫ - —Å—Ç–∞–≤–∏—Ç—å –∑–∞–º–æ–∫ –∏ —Ç–∞–∫–∂–µ –≤—ã—Ö–æ–¥—è –∏–∑ –º–µ—Ç–æ–¥–∞ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –∑–∞–º–æ–∫ –∏ —Ç–∞–∫ –¥–æ –∫–æ–Ω—Ü–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã.
// –ò —Ç–µ–ø–µ—Ä—å –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å–æ–ª—å: 2000
// –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –º—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–ª–∏ –º–µ—Ç–æ–¥ increment() –∏ —Ç–µ–ø–µ—Ä—å —Å –Ω–∏–º –≤ –æ–¥–Ω–æ –∏ —Ç–æ–∂–µ –≤—Ä–µ–º—è –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø–æ—Ç–æ–∫
class Ex3 {
  static int counter = 0;
  public static synchronized void increment() {
    counter++;
  }

  public static void main(String[] args) throws InterruptedException {
    Thread thread1 = new Thread(new R1());
    Thread thread2 = new Thread(new R1());
    thread1.start();
    thread2.start();
    thread1.join();
    thread2.join();
    System.out.println(counter);
  }
}

class R1 implements Runnable {
  @Override
  public void run() {
    for (int i = 0; i < 1000; i++) {
      Ex3.increment();
    }
  }
}


// –ò —Ç–µ–ø–µ—Ä—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–π –ø—Ä–∏–º–µ—Ä –≤ –Ω–∞—á–∞–ª–µ —É—Ä–æ–∫–∞
class Ex4 {
  public static void main(String[] args) {
    MyRunnableImpl2 myRunnableImpl2 = new MyRunnableImpl2(); // –∏ —Å–æ–∑–¥–∞–¥–∏–º 3 –ø–æ—Ç–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É—è —ç—Ç–æ—Ç myRunnableImpl1
    Thread thread1 = new Thread(myRunnableImpl2);
    Thread thread2 = new Thread(myRunnableImpl2);
    Thread thread3 = new Thread(myRunnableImpl2);
    thread1.start();
    thread2.start();
    thread3.start();

    // –∫–æ–Ω—Å–æ–ª—å: 1 2 3 4 5 6 7 8 9  \\ –¢–µ–ø–µ—Ä—å —Ç–æ —á—Ç–æ –º—ã –æ–∂–∏–¥–∞–ª–∏
  }
}

class Counter1 {
  static int count = 0;
}

class MyRunnableImpl2 implements Runnable {

  public synchronized void increment() {
    Counter1.count++;
    System.out.print(Counter1.count + " ");
  }

  @Override
  public void run() {
    for (int i = 0; i < 3; i++) {
      increment();
    }
  }
}

// üìå –ü—Ä–∏–º–µ—Ä –º–µ—Ç–æ–¥–∞:
// public synchronized void abc() {method body}

// –ö–∞–∫ –∏–∑–Ω—É—Ç—Ä–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç —ç—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –ª–æ–∫–∏–Ω–≥–∞ –∏ –∞–Ω–ª–æ–∫–∏–Ω–≥–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤ —Å–ª–µ–¥—É—é—â–µ–º —É—Ä–æ–∫–µ





