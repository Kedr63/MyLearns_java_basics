package work_with_file;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Map;

public class _6_PathAndFilesEx1 {
    // Interface Path & class Files ‚ù§Ô∏è

    /** –ï—â–µ –±–æ–ª—å—à–µ –º–æ–∂–µ–º –¥–µ–ª–∞—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–π —Å –Ω–∞—à–∏–º–∏ —Ñ–∞–π–ª–∞–º–∏ (—á–µ–º –≤ –∫–ª–∞—Å—Å–µ File). –ò –≤–º–µ—Å—Ç–æ –µ–¥–∏–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ File,
     *  –ø–æ—è–≤–∏–ª–∏—Å—å Interface Path & class Files.
     *  –û–±—ä–µ–∫—Ç —Ç–∏–ø–∞ Path –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
     *  üìåPath path = Paths.get("test1.txt"); üìå
     *   –ò—Å–ø–æ–ª—å–∑—É—è –∫–ª–∞—Å—Å Paths –∏ –µ–≥–æ –º–µ—Ç–æ–¥ get, –º—ã –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ —É get —É–∫–∞–∑—ã–≤–∞–µ–º –∞–¥—Ä–µ—Å —ç—Ç–æ–≥–æ path-–∞, –∏ —Ç–∞–∫–∏–º
     *   –æ–±—Ä–∞–∑–æ–º –º–µ—Ç–æ–¥ get –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–º –ø—É—Ç—å.
     *   Files –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å —ç—Ç–æ utility –∫–ª–∞—Å—Å, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –º–Ω–æ–≥–æ –æ—á–µ–Ω—å –ø–æ–ª–µ–∑–Ω—ã—Ö —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç–æ–¥–æ–≤
     *   –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º–∏*/

    public static void main(String[] args) throws IOException {
      // –ü—Ä–∏–º–µ—Ä—ã
        Path filePath = Paths.get("test45.txt"); // —Ç–∞–∫–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ –ø—Ä–æ–µ–∫—Ç–µ –Ω–µ—Ç, –Ω–æ –º—ã –º–æ–∂–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–∞–∫–æ–π –ø—É—Ç—å
        Path directoryPath = Paths.get("/Users/aleksandrshabalin/Desktop/ForWorkFiles/L"); // —Ç–∞–∫–æ–π –ø–∞–ø–∫–∏ —Ç–æ–∂–µ
        // –≤ –ø—Ä–æ–µ–∫—Ç–µ –Ω–µ—Ç, –Ω–æ —ç—Ç–æ –Ω–µ –º–µ—à–∞–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—É—Ç–∏

        System.out.println("filePath.getFileName() " + filePath.getFileName());
        System.out.println("directoryPath.getFileName() " + directoryPath.getFileName());
        System.out.println("------------------------------------------");

        System.out.println("filePath.getParent() " + filePath.getParent()); // null (–ø–æ—Ç–æ–º—É —á—Ç–æ –ø—É—Ç—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π)
        System.out.println("directoryPath.getParent() " + directoryPath.getParent()); // /Users/aleksandrshabalin/Desktop/ForWorkFiles
        System.out.println("------------------------------------------");

        System.out.println("filePath.getRoot() " + filePath.getRoot()); // null (–ø–æ—Ç–æ–º—É —á—Ç–æ –ø—É—Ç—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π)
        System.out.println("directoryPath.getRoot() " + directoryPath.getRoot()); //   /
        System.out.println("------------------------------------------");

        System.out.println("filePath.isAbsolute() " + filePath.isAbsolute());  // false
        System.out.println("directoryPath.isAbsolute() " + directoryPath.isAbsolute());  // true
        System.out.println("------------------------------------------");

        System.out.println("filePath.toAbsolutePath() " + filePath.toAbsolutePath());
        // /Users/aleksandrshabalin/Skillbox/MyLearns_java_basics/test45.txt
        System.out.println("directoryPath.toAbsolutePath() " + directoryPath.toAbsolutePath());
        //  /Users/aleksandrshabalin/Desktop/ForWorkFiles/L
        System.out.println("------------------------------------------");

        // –ü–æ–ª—É—á–∏–≤ –∞–±—Å –ø—É—Ç—å —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–µ–Ω—Ç –ø—É—Ç—å
        System.out.println("filePath.toAbsolutePath.getParent() " + filePath.toAbsolutePath().getParent());
        // /Users/aleksandrshabalin/Skillbox/MyLearns_java_basics
        System.out.println("directoryPath.toAbsolutePath().getRoot " + directoryPath.toAbsolutePath().getRoot());
        //  /
        System.out.println("------------------------------------------");

        //‚ùóÔ∏è –¢–µ–ø–µ—Ä—å —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –¥–≤–∞ –æ—á–µ–Ω—å –≤–∞–∂–Ω—ã—Ö –º–µ—Ç–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–µ —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ ‚¨á:

        // üìå resolve - –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –¥–≤–∞ –ø—É—Ç–∏ –≤ –æ–¥–∏–Ω
        System.out.println("directoryPath.resolve(filePath) " + directoryPath.resolve(filePath));
        // /Users/aleksandrshabalin/Desktop/ForWorkFiles/L/test45.txt <-> –í–æ—Ç –±—ã–ª –Ω–∞—à directoryPath ->
        // -> /Users/aleksandrshabalin/Desktop/ForWorkFiles/L   –∏ –º—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏ –∫ –Ω–µ–º—É (–ø—Ä–∏–±–∞–≤–∏–ª–∏) filePath
        // –∏ –ø–æ–ª—É—á–∏–ª–∏ —Ç–∞–∫–æ–π –ø—É—Ç—å /Users/aleksandrshabalin/Desktop/ForWorkFiles/L/test45.txt __  –∫–∞–∫ –±—É—Ç-—Ç–æ –±—ã —Ñ–∞–π–ª
        // test45.txt –ª–µ–∂–∏—Ç –≤ –ø–∞–ø–∫–µ "L". –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ —É –Ω–∞—Å –ø–æ–∫–∞ –Ω–∏ —Ç–æ–≥–æ –Ω–∏ –¥—Ä—É–≥–æ–≥–æ –Ω–µ—Ç –ø–æ–∫–∞ —á—Ç–æ, –ø—Ä–æ—Å—Ç–æ —Ä–µ—á—å –ø–æ–∫–∞
        // –∏–¥–µ—Ç –æ –ø—É—Ç—è—Ö, –∞ –Ω–µ —Å–∞–º–∏—Ö –∫–∞–∫–∏—Ö-—Ç–æ —Ñ–∞–π–ª–∞—Ö
        System.out.println("------------------------------------------");

        // üìå relativize - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–≥–æ –¥—Ä—É–≥–æ–≥–æ –ø—É—Ç–∏
        Path anotherPath = Paths.get("/Users/aleksandrshabalin/" +
                "Desktop/ForWorkFiles/L/Q/J/test20.txt");
        // —Ç–µ–ø–µ—Ä—å –Ω–∞–º –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –Ω–∞—à–µ–≥–æ directoryPath
        System.out.println("directoryPath.relativize(filePath) "
                + directoryPath.relativize(anotherPath)); // Q/J/test20.txt
        // —Ç/–µ –º—ã –∏—â–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å anotherPath –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ø—É—Ç–∏ directoryPath
        System.out.println("------------------------------------------");


        //‚ùóÔ∏è –¢–µ–ø–µ—Ä—å —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –º–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å–∞ Files ‚ù§Ô∏è

        if (!Files.exists(filePath)){
            Files.createFile(filePath);
        }
        if (!Files.exists(directoryPath)){
            Files.createFile(directoryPath);
        }
        // ‚¨Ü —Ç–∞–∫ –∫–∞–∫ —Ñ–∞–π–ª –∏ –ø—É—Ç—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç - –æ–Ω–∏ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã

        // –ü—Ä–∞–≤–∞ –Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è —Å —Ñ–∞–π–ª–∞–º–∏
        System.out.println("Files.isReadable(filePath) " + Files.isReadable(filePath)); // –º–æ–∂–µ—Ç –ª–∏ —á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª?
        System.out.println("Files.isWritable(filePath) " + Files.isWritable(filePath)); // –º–æ–∂–µ—Ç –ª–∏ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –≤ —Ñ–∞–π–ª?
        System.out.println("Files.isExecutable(filePath) " + Files.isExecutable(filePath)); // –º–æ–∂–µ—Ç –ª–∏ –∑–∞–ø—É—Å–∫–∞—Ç—å —Ñ–∞–π–ª?
        System.out.println("------------------------------------------");

        // –º–µ—Ç–æ–¥: —Å—Å—ã–ª–∞—é—Ç—Å—è –ª–∏ –æ–±–∞ –ø—É—Ç–∏ –Ω–∞ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ —Ñ–∞–π–ª
        Path filePath2 = Paths.get("/Users/aleksandrshabalin/Skillbox/MyLearns_java_basics/test45.txt");
        System.out.println("Files.isSameFile(filePath, filePath2) "
                + Files.isSameFile(filePath, filePath2));  // true
        System.out.println("------------------------------------------");


        System.out.println("Files.size(filePath) " + Files.size(filePath)); // 45 (byte)
        System.out.println("------------------------------------------");

        // —É–∑–Ω–∞—Ç—å –æ–± –∞—Ç—Ä–∏–±—É—Ç–∞—Ö —Ñ–∞–π–ª–∞
        System.out.println("Files.getAttribute(filePath) "
                + Files.getAttribute(filePath, "creationTime")); // 2021-12-17T10:13:36Z
        System.out.println("Files.getAttribute(filePath) "
                + Files.getAttribute(filePath, "size")); // 45
        System.out.println("------------------------------------------");

        // –µ—Å–ª–∏ –Ω–∞–º –Ω—É–∂–Ω—ã –≤—Å–µ –∞—Ç—Ä–∏–±—É—Ç—ã
        Map<String, Object> attributes = Files.readAttributes(filePath, "*");
        for (Map.Entry<String, Object> entry : attributes.entrySet()){
            System.out.println(entry.getKey() + " : " + entry.getValue());
        }
        // –≤–æ–∑—Ä–∞—â–∞—é—Ç—Å—è —Å–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ –∞—Ç—Ç—Ä–∏–±—É—Ç—ã
        /*lastAccessTime : 2021-12-17T10:45:19Z
        lastModifiedTime : 2021-12-17T10:30:30Z
        size : 45
        creationTime : 2021-12-17T10:13:36Z
        isSymbolicLink : false
        isRegularFile : true
        fileKey : (dev=1000003,ino=3389857)
        isOther : false
        isDirectory : false      */







    }
}
