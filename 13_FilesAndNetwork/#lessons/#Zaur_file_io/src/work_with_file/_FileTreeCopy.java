package work_with_file;

import java.io.IOException;
import java.nio.file.*;
import java.nio.file.attribute.BasicFileAttributes;

public class _FileTreeCopy {
    // ‚ù§Ô∏è –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –ø—É—Å—Ç–æ–π –ø–∞–ø–∫–∏ –≥—É–ª—è–Ω–∏–µ–º –ø–æ –¥–µ—Ä–µ–≤—É —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ walkFileTree

    // –î–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –ø—É—Å—Ç—ã—Ö –ø–∞–ø–æ–∫ –º—ã –æ–ø—è—Ç—å —Ç–∞–∫–∏ –±—É–¥–µ–º –≥—É–ª—è—Ç—å –ø–æ –¥–µ—Ä–µ–≤—É, –∏ –ø–æ—ç—Ç–æ–º—É –º—ã –¥–æ–ª–∂–Ω—ã –∏–º–ø–ª–µ–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å
    // –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å /FileVisitor/ –∏–ª–∏ –∂–µ extend-–∏—Ç—å /SimpleFileVisitor/.
    // –ú—ã –≤ –¥–∞–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ –±—É–¥–µ–º extend-–∏—Ç—å /SimpleFileVisitor/, –ø–æ—Ç–æ–º—É —á—Ç–æ –∏–∑ 4-—Ö –º–µ—Ç–æ–¥–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    // /FileVisitor/ - –º—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ–≥–æ –¥–≤–∞:
    // üìç preVisitDirectory - –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å–∞–º—É –ø–∞–ø–∫—É
    // üìç visitFile - —á—Ç–æ–±—ã –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å–∞–º —Ñ–∞–π–ª

    // –ò —Å–æ–∑–¥–∞–¥–∏–º –∫–ª–∞—Å—Å MyFileVisitor


    public static void main(String[] args) throws IOException {
        Path source = Paths.get("/Users/aleksandrshabalin/Desktop/ForWorkFiles/X");
        Path destination = Paths.get("/Users/aleksandrshabalin/Desktop/ForWorkFiles/CopyHere");
        //  –ò –≤—ã–∑—ã–≤–∞–µ–º –Ω–∞—à –º–µ—Ç–æ–¥ /walkFileTree/ –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–º—É –æ—Ç–∫—É–¥–∞ –º—ã –Ω–∞—á–∏–Ω–∞–µ–º –≥—É–ª—è–Ω–∏–µ –ø–æ —Ñ–∞–π–ª–æ–≤–æ–º—É –¥–µ—Ä–µ–≤—É
        // –∏ —á—Ç–æ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –ø—Ä–∏ —Ö–æ–∂–¥–µ–Ω–∏–∏ –ø–æ —ç—Ç–æ–º—É —Ñ–∞–π–ª–æ–≤–æ–º—É –¥–µ—Ä–µ–≤—É. –ê —á—Ç–æ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –æ–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è
        // –≤ –∫–ª–∞—Å—Å–µ MyFileVisitor2 (–º—ã –æ–ø–∏—Å—ã–≤–∞–µ–º –∑–¥–µ—Å—å —á—Ç–æ –º—ã –±—É–¥–µ–º –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏ –≤—Å—Ç–∞–≤–ª—è—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é
        // –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–∏ —Ö–æ–∂–¥–µ–Ω–∏–∏ –ø–æ —Ñ–∞–π–ª–æ–≤–æ–º—É –¥–µ—Ä–µ–≤—É)
        Files.walkFileTree(source, new MyFileVisitor2(source, destination));
        System.out.println("Done!");
    }
}

class MyFileVisitor2 extends SimpleFileVisitor<Path> {
    // –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è, –º—ã –¥–æ–ª–∂–Ω—ã –∑–Ω–∞—Ç—å —á—Ç–æ –º—ã –∫–æ–ø–∏—Ä—É–µ–º, —Ç/–µ –æ—Ç–∫—É–¥–∞ –∫–æ–ø–∏—Ä—É–µ–º –∏
    // –∫—É–¥–∞ –∫–æ–ø–∏—Ä—É–µ–º (–≤ –Ω–∞—à–µ–º –ø—Ä–∏–º–µ—Ä–µ –±—É–¥–µ–º –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –ø–∞–ø–∫—É "–•" –≤ –ø–∞–ø–∫—É "CopyHere")
    Path source;
    Path destination;

    // –ò –ø–µ—Ä–µ–¥–∞–¥–∏–º –≤—Å–µ —ç—Ç–æ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    public MyFileVisitor2(Path source, Path destination) {
        this.source = source;
        this.destination = destination;
    }

    // –ò –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏–º –º–µ—Ç–æ–¥—ã
    @Override
    public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs) throws IOException {
        Path newDestination = destination.resolve(source.relativize(dir));
        Files.copy(dir, newDestination, StandardCopyOption.REPLACE_EXISTING);
        return FileVisitResult.CONTINUE;
    }

    @Override
    public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {
        Path newDestination = destination.resolve(source.relativize(file));
        Files.copy(file, newDestination, StandardCopyOption.REPLACE_EXISTING);
        return FileVisitResult.CONTINUE;
    }
}
// –≠—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å, –∫–æ—Ç–æ—Ä—ã–π —Ä–∏—Å–æ–≤–∞–ª–∏ –Ω–∞ –ª–∏—Å—Ç–∫–µ (–ø–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—é –ø–∞–ø–æ–∫ –∏ —Ñ–∞–π–ª–æ–≤), –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —Å–∞–º–æ–π –ø–∞–ø–∫–µ "–•" —Ç–æ–∂–µ.
// –≠—Ç–∞ –ø–∞–ø–∫–∞ "–•" —Ç–∞–∫–∂–µ –±—É–¥–µ—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –∏ –≤—Å—Ç–∞–≤–ª–µ–Ω–∞ —Å –Ω–æ–≤—ã–º –∏–º–µ–Ω–µ–º "CopyHere" –ø–æ —Ç–µ–º –∂–µ —Å–∞–º—ã–º –ø—Ä–∞–≤–∏–ª–∞–º —á—Ç–æ –∏ –ø—Ä–∏
// –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–∞–ø–æ–∫ Y1, Y2 –∏ —Ç.–¥., –ø–æ—ç—Ç–æ–º—É —á—Ç–æ–±—ã –º—ã —É–º–µ–ª–∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å —ç—Ç—É –ø–∞–ø–∫—É "CopyHere" –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
// –≤ –º–µ—Ç–æ–¥–µ /copy/ -> StandardCopyOption.REPLACE_EXISTING
